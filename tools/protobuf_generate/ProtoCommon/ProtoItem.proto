option optimize_for = LITE_RUNTIME;

import "ProtoGameData.proto";

package Protocol;

// 对应ItemCmd

//-------------------------
// 物品相关逻辑操作
enum ItemOpCode {
	OP_CREATE_DROP_ITEM = 1;		// 在地图上创建掉落物品
	OP_MONSTER_DROP_ITEM = 2;		// 怪物掉落道具
	OP_CHAR_DROP_ITEM = 3;			// 玩家扔道具到地上
	OP_REMOVE_ITEM_FROM_MAP = 4;	// 通知玩家删除地图上的道具
	OP_PICKUP_ITEM = 5;				// 玩家捡取地图上的道具
	OP_EQUIP_ITEM = 6;				// 玩家装备(卸下)某件道具

	OP_ADD_ITEM = 7;				// 服务器主动给玩家发送道具
	OP_REMOVE_ITEM = 8;				// 服务器主动移除玩家的道具
	OP_REPLACE_ITEM = 9;			// 服务器主动更新(添加)玩家的道具信息

	OP_STORE_GET_ITEMS = 10;		// 请求服务器下发指定商店的道具
	OP_STORE_BUY_ITEMS = 11;		// 从npc商店购买道具
	OP_STORE_SELL_ITEMS = 12;		// 出售道具到npc商店

	OP_USE_ITEM = 13;				// 使用指定物品

	OP_GET_BUY_PACKAGE_PRICE = 14;	// 增加包裹大小
	OP_BUY_PACKAGE_SIZE = 15;		// 增加包裹大小
	OP_SORT_PACKAGE = 16;			// 客户端请求整理包裹
	OP_REFRESH_PACKAGE = 17;		// 更新整个包裹内容

	OP_SAFE_GET_ITEMS = 20;			// 请求仓库中的道具
	OP_SAFE_DEPOSIT_MONEY = 21;		// 仓库中存钱
	OP_SAFE_WITHDRAW_MONEY = 22;	// 仓库中取钱
	OP_SAFE_DEPOSIT_ITEM = 23;		// 仓库中存道具
	OP_SAFE_WITHDRAW_ITEM = 24;		// 仓库中取道具

	OP_CASHSHOP_GET_ITEMS = 30;		// 请求服务器下发商城的道具
	OP_CASHSHOP_BUY_ITEMS = 31;		// 从商城购买道具

	OP_EQUIP_REPAIR_REMOTE_OPEN = 40;	// 请求开启远程修理
	OP_EQUIP_REPAIR_GET_MONEY = 41;		// 获得装备修理的费用(身上和全部)
	OP_EQUIP_REPAIR = 42;				// 装备修理

	OP_EQUIP_GET_RESET_EXPIRED_COST = 43;	// 获得道具续费的费用
	OP_EQUIP_RESET_EXPIRED_TIME = 44;		// 道具续费(续费有时间限制的道具)

	OP_BUYBACK_GET_ITEMS = 45;			// 请求服务器下发回购商店的道具
	OP_BUYBACK_BUY_ITEMS = 46;			// 从回购商店购买道具
}



// 掉落物品结构体
message DropItemInfo {
	optional int32 owner_id = 1;	// 拥有者的id(0表示，都能捡取)
	optional int32 item_id = 2;		// 物品编号(金币需要判断特殊编号)
	optional int32 item_num = 3 [default=1];	// 数量
	optional int32 map_x = 4;		// 地图上的格子坐标
	optional int32 map_y = 5;
	optional int32 color = 6;		// 颜色
	optional int32 quality = 7;		// 品质
}


// 通知玩家在地图上批量创建掉落道具
message NotifyCreateDropItem {
	repeated DropItemInfo item_list = 1;
}

// 怪物掉落物品到地图上
message NotifyMonsterDropItem {
	repeated DropItemInfo item_list = 1;
}

// 玩家请求扔物品到地图上
message RequestCharDropItem {
	optional ItemLoc src_loc = 1;	// 物品的位置
	optional int32 item_num = 2;	// 物品的数量
	optional int32 map_x = 3;
	optional int32 map_y = 4;
}

// 通知玩家扔物品
message NotifyCharDropItem {
	optional DropItemInfo item = 1;
}

// 通知玩家删除地图上的物品(没人捡取的道具，需要定时清除)
message NotifyRemoveItemFromMap {
	optional int32 map_x = 1;
	optional int32 map_y = 2;
}

// 玩家请求捡取地图上的道具
message RequestPickupItem {
	optional int32 map_x = 1;
	optional int32 map_y = 2;
}

// 通知玩家，有人捡取了地图上的道具
message NotifyPickupItem {
	optional int32 char_id = 1;		// 玩家id
	optional int32 map_x = 2;
	optional int32 map_y = 3;
	optional int32 item_id = 4;		// 物品id
}

// 玩家请求装备(卸下)某个道具
message RequestEquipItem {
	optional ItemLoc src_loc = 1;		// 物品的位置
}

// 返回玩家装备(卸下)某个道具
message ResponseEquipItem {
	optional ItemLoc src_loc = 1;		// 源位置
	optional ItemLoc dest_loc = 2;	// 目标位置
}

// 通知玩家增加道具
message NotifyAddItem {
	repeated ItemLocData item_list = 1;	// 物品列表
}

// 通知玩家移除道具
message NotifyRemoveItem {
	repeated ItemLoc loc_list = 1;		// 物品位置列表
}

// 通知玩家(添加)更新道具数据
message NotifyReplaceItem {
	repeated ItemLocData item_list = 1;				// 物品列表
	optional bool is_new_item = 2 [default=true];	// 是否新物品(新物品就播放动画)
}

// 通知玩家更新整个包裹
message NotifyRefreshPackage {
	optional int32 pkg = 1;					// 包裹类型
	repeated ItemData item_list = 2;		// 物品列表
}

// 请求使用道具
message RequestUseItem {
	optional ItemLoc loc = 1;	// 物品位置
}

// 使用物品的返回
message ResponseUseItem {
	optional ItemLoc loc = 1;	// 物品位置
}


// 请求购买包裹的价格
message RequestGetBuyPackagePrice {
	optional int32 pkg = 1;	// 包裹类型
	optional int32 buy_num = 2;	// 购买数量
}

// 购买包裹的返回
message ResponseGetBuyPackagePrice {
	optional int32 pkg = 1;		// 包裹类型
	optional int32 buy_num = 2;	// 购买数量
	optional int32 price = 3;	// 购买价格
}

// 请求购买包裹大小
message RequestBuyPackageSize {
	optional int32 pkg = 1;	// 包裹类型
	optional int32 buy_num = 2;	// 购买数量
}

// 购买包裹的返回
message ResponseBuyPackageSize {
	optional int32 result = 1;
	optional int32 pkg = 2;	// 包裹类型
	optional int32 cur_num = 3;	// 购买以后，现在的数量
}

// 请求整理包裹
message RequestSortPackage {
	optional int32 pkg = 1;	// 包裹类型
}


/////////////////// npc 商店 begin ///////////////////////////
// 商店物品结构

enum StoreCurrencyType {
	Money = 0;			// 金币
	GuildCredits = 1;	// 个人公会贡献
}

message StoreItem {
	optional int32 itemid = 1;	// 物品编号
	optional int32 price = 2;	// 物品价格
}

// 请求商店道具
message RequestGetStoreItem {
	optional int32 npcid = 1;			// npc编号
}

// 商店道具返回
message ResponseGetStoreItem {
	optional StoreCurrencyType type = 1;
	repeated StoreItem item_list = 2;	// 物品列表
}

// 请求购买道具
message RequestBuyStoreItem {
	optional int32 itemid = 1;	// 购买的道具编号
	optional int32 num = 2;		// 数量
	optional int32 money = 3;	// 总的金币(服务器验算用)
}

// 购买道具结果
message ResponseBuyStoreItem {
	optional int32 result = 1;	// 购买结果
}

// 出售物品结构体
message SellItemInfo {
	optional ItemLoc loc = 1;			// 物品位置
	optional int32 num = 2;		// 数量
}

// 请求出售道具
message RequestSellItem {
	repeated SellItemInfo item_list = 1;	// 物品列表
	optional int32 money = 2;				// 总的金币(服务器验算用)
}

// 出售道具结果
message ResponseSellItem {
	optional int32 result = 1;	// 出售结果
}
///////////////// npc 商店 end /////////////////////////////




/////////////////// 仓库 begin ///////////////////////////
// 请求仓库中的道具(服务器通过OP_REFRESH_PACKAGE消息返回内容)
message RequestGetSafeItems {
	optional int32 reserve = 1;	// 保留字段(不用填写)
}

// 存钱(服务器通过OP_UPDATE_PROPERTY更新金币)
message RequestDepositMoney {
	optional uint64 money = 1;	// 需要存的数量
}

// 取钱(服务器通过OP_UPDATE_PROPERTY更新金币)
message RequestWithdrawMoney {
	optional uint64 money = 1;	// 需要取的数量
}

// 存道具(服务器通过OP_REPLACE_ITEM更新包裹信息)
message RequestDepositItem {
	repeated ItemLocNum loc_list = 1;	// 需要存的道具信息
}

// 取道具(服务器通过OP_REPLACE_ITEM更新包裹信息)
message RequestWithdrawItem {
	repeated ItemLocNum loc_list = 1;	// 需要取的道具信息
}
/////////////////// 仓库 end ///////////////////////////



/////////////////// 商城 begin ///////////////////////////
// 商城物品结构
message CashShopItem {
	optional int32 cashid = 1;	// 物品在商城中的编号
	optional int32 group = 2;	// 分类(1开始)
	optional int32 recommend = 3;	// 推荐类型(0-普通，1-热卖，2-未定)
	optional int32 itemid = 4;	// 物品编号
	optional int32 itemnum = 5 [default=1];	// 物品数量(大于0才显示)
	optional int32 original_price = 6;	// 原始价格
	optional int32 discount_price = 7;	// 打折后的价格
}

// 请求商城道具
message RequestGetCashShopItem {
	optional int32 reserve = 1;		// 保留字段
}

// 商店商城返回
message ResponseGetCashShopItem {
	repeated CashShopItem item_list = 1;	// 物品列表
}

// 请求购买商城道具
message RequestBuyCashShopItem {
	optional int32 cashid = 1;			// 购买的商城道具编号(不是物品编号)
	optional int32 num = 2 [default=1];	// 数量
	optional string charname = 3;		// 被赠送的角色名
	optional int32 gold = 4;			// 总的钻石(服务器验算用)
}

// 购买商城道具结果
message ResponseBuyCashShopItem {
	optional int32 result = 1;	// 购买结果
}
/////////////////// 商城 end ///////////////////////////




/////////////////// 装备修理 begin ///////////////////////////

enum EquipRepairType
{
	REPAIR_EUIQP = 0;	// 修理身上
	REPAIR_ALL = 1;		// 修理全部
}

// 请求开启远程修理
message RequestRemoteOpenEquipRepair {
	optional int32 reserve = 1;
}

// 获得装备修理的费用(身上和全部),request消息，暂时客户端不用发送（由脚本触发）
message RequestGetEquipRepairMoney {
	optional EquipRepairType repair_type = 1;
}

message ResponseGetEquipRepairMoney {
	optional EquipRepairType repair_type = 1;
	optional int32 money = 2;
}

// 请求修理装备
message RequestEquipRepair {
	optional EquipRepairType repair_type = 1;
}

message ResponseEquipRepair {
	optional int32 result = 1;
	optional EquipRepairType repair_type = 2;
}


// 获得道具续费的费用
message RequestEquipGetResetExpiredCost {
	optional ItemLoc loc = 1;
}

message ResponseEquipGetResetExpiredCost {
	optional ItemLoc loc = 1;
	optional int32 gold = 2;	// 钻石
}

// 道具续费(续费有时间限制的道具)
message RequestEquipResetExpiredTime {
	optional ItemLoc loc = 1;
}

message ResponseEquipResetExpiredTime {
	optional ItemLoc loc = 1;
	optional int32 result = 2;
}


/////////////////// 装备修理 end ///////////////////////////




/////////////////// 回购 begin ///////////////////////////

// 请求回购列表
message RequestBuybackGetItem {
	optional int32 reserve = 1;
}

// 请求购买回购道具
message RequestBuybackBuyItem {
	optional ItemLocNum loc_num = 1;			// 包裹位置包含数量
}

/////////////////// 回购 end ///////////////////////////

