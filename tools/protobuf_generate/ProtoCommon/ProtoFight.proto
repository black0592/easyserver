option optimize_for = LITE_RUNTIME;

import "ProtoGameData.proto";

package Protocol;

// 对应FightCmd

//-------------------------
// 角色选择逻辑操作号
enum FightOpCode {
	OP_CHAR_ATTACK_MONSTER = 1;	// 玩家攻击怪物
	OP_CHAR_ATTACK_CHAR = 2;	// 玩家攻击玩家
	OP_MONSTER_ATTACK_CHAR = 3;	// 怪物攻击玩家
}


// 攻击者信息
message AttackInfo {
	optional int32 id = 1;			// 攻击者id(客户端发送时不要填写,服务器转发时会填写)
	optional int32 x = 2;			// 攻击者x坐标(可能会去掉)
	optional int32 y = 3;			// 攻击者y坐标(可能会去掉)
	optional int32 skill_id = 4;	// 攻击者使用的技能id
	optional int32 skill_level = 5;	// 攻击者使用的技能等级
}

// 目标信息
message TargetInfo {
	optional int32 id = 1;			// 目标id，客户端填写，服务器验证
	optional int32 damage = 2;		// 造成的伤害值，服务器填写
	optional bool misss = 3;		// 是否miss，服务器填写
	optional bool critical = 4;		// 是否暴击，服务器填写
	optional int32 curhp = 5;		// 服务器填写
	optional int32 maxhp = 6;		// 服务器填写
	optional int32 curmp = 7;		// 服务器填写
	optional int32 maxmp = 8;		// 服务器填写
}

// 玩家攻击怪物
message MsgCharAttackMonster {
	optional AttackInfo attack_info = 1;	// 攻击者信息
	repeated TargetInfo target_list = 2;	// 被攻击者信息
}

// 玩家攻击玩家
message MsgCharAttackChar {
	optional AttackInfo attack_info = 1;	// 攻击者信息
	repeated TargetInfo target_list = 2;	// 被攻击者信息
}

// 怪物攻击玩家
message NotifyMonsterAttackChar {
	optional AttackInfo attack_info = 1;	// 攻击者信息
	repeated TargetInfo target_list = 2;	// 被攻击者信息
}
