option optimize_for = LITE_RUNTIME;

import "ProtoGameData.proto";

package Protocol;

//-------------------------
// 操作号
enum ChattingOpCode {
	OP_CHATTING_SEND_CONTENT = 1;		// 发送聊天内容
	OP_CHATTING_GET_ATTACH_DETAIL = 2;	// 获得附件详细信息
	OP_CHATTING_SET_CHAT_CHANNEL = 3;	// 设置聊天的接收频道
}


/////////////////// 聊天 begin ///////////////////////////

// 聊天频道
enum ChatChannel {
	CHAT_CHANNEL_PRIVATE = 1;	// 私聊
	CHAT_CHANNEL_ROUND = 2;		// 周围可视范围
	CHAT_CHANNEL_MAP = 4;		// 当前地图所有玩家
	CHAT_CHANNEL_TEAM = 8;		// 同一个队伍才能收到
	CHAT_CHANNEL_GUILD = 16;	// 同一个公会才能收到
	CHAT_CHANNEL_COUNTRY = 32;	// 只有相同国家的人才能收到
	CHAT_CHANNEL_SERVER = 64;	// 整个游戏都能收到
	CHAT_CHANNEL_SYSTEM = 128;	// 系统发来的信息
}

// 附加物品类型
enum ChatAttachType {
	CHAT_ATTACH_ITEM = 0;	// 物品
}

// 发送时附加信息(客户端填写)
message ChatSendAttachInfo {
	optional ChatAttachType type = 1;	// 类型
	optional ItemLoc loc = 5;			// 物品在包裹中的位置(物品)
}

// 接收时附加信息(服务器填写)
message ChatReceiveAttachInfo {
	optional ChatAttachType type = 1;	// 类型
	optional int32 uuid = 2;			// 唯一id(由服务器聊天管理系统生成)
	optional int32 id = 3;				// 基础表中的id(通用)
	optional int32 star = 4;			// 强化等级(物品)
}

// ------------------------
// 请求发送聊天内容
message RequestSendChatContent {
	optional ChatChannel channel = 1;				// 聊天频道(不支持频道组合)
	optional string receiver = 2;					// 私聊对象（私聊频道才需要填写）
	optional string content = 3;					// 聊天内容
	repeated ChatSendAttachInfo send_attachs = 4;	// 附加物品信息
}

// 通知聊天内容
message NotifySendChatContent {
	optional ChatChannel channel = 1;		// 聊天频道
	optional string content = 2;			// 聊天内容
	optional string sender = 3;				// 发送人名字
	optional string receiver = 4;			// 私聊对象（私聊频道才需要填写）
	repeated ChatReceiveAttachInfo receive_attachs = 5;	// 附加物品信息
}

// ------------------------
// 获得附件详细信息
message RequestGetChatAttachDetail {
	optional int32 uuid = 1;	// 唯一id(由服务器聊天管理系统生成)
}

message ResponseGetChatAttachDetail {
	optional ItemData item = 1;	// 物品详细信息(物品)
	// other
}

// ------------------------
// 设置聊天频道
message RequestSetChatChannel {
	optional int32 channel = 1;		// 支持多个频道组合
}

message ResponseSetChatChannel {
	optional int32 result = 1;
	optional int32 channel = 2;		// 支持多个频道组合
}

