// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoGeneral.proto

#ifndef PROTOBUF_ProtoGeneral_2eproto__INCLUDED
#define PROTOBUF_ProtoGeneral_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "ProtoGameData.pb.h"
// @@protoc_insertion_point(includes)

namespace Protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoGeneral_2eproto();
void protobuf_AssignDesc_ProtoGeneral_2eproto();
void protobuf_ShutdownFile_ProtoGeneral_2eproto();

class NotifyGeneralError;
class NotifyGameConfig;
class NotifyOpenGUI;
class NotifyCloseGUI;
class NotifyServerTime;
class NotifyShowGamePrompt;
class NotifyHideGamePrompt;
class RollingNoticeInfo;
class NotifyRollingNotice;

enum GeneralOpCode {
  OP_GENERAL_ERROR = 1,
  OP_GENERAL_GAME_CONFIG = 2,
  OP_GENERAL_OPEN_GUI = 3,
  OP_GENERAL_CLOSE_GUI = 4,
  OP_GENERAL_SERVER_TIME = 5,
  OP_GENERAL_SHOW_GAMEPROMPT = 6,
  OP_GENERAL_HIDE_GAMEPROMPT = 7,
  OP_GENERAL_ROLLING_NOTICE = 8
};
bool GeneralOpCode_IsValid(int value);
const GeneralOpCode GeneralOpCode_MIN = OP_GENERAL_ERROR;
const GeneralOpCode GeneralOpCode_MAX = OP_GENERAL_ROLLING_NOTICE;
const int GeneralOpCode_ARRAYSIZE = GeneralOpCode_MAX + 1;

enum ErrorCode {
  ERROR_GATEWAY_NOT_OPEN = 1
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = ERROR_GATEWAY_NOT_OPEN;
const ErrorCode ErrorCode_MAX = ERROR_GATEWAY_NOT_OPEN;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

enum GamePromptType {
  PromptMail = 1,
  PromptActivity = 2,
  PromptAchievement = 3,
  PromptGuildApplyFor = 4,
  PromptLevelupPoint = 5
};
bool GamePromptType_IsValid(int value);
const GamePromptType GamePromptType_MIN = PromptMail;
const GamePromptType GamePromptType_MAX = PromptLevelupPoint;
const int GamePromptType_ARRAYSIZE = GamePromptType_MAX + 1;

// ===================================================================

class NotifyGeneralError : public ::google::protobuf::MessageLite {
 public:
  NotifyGeneralError();
  virtual ~NotifyGeneralError();

  NotifyGeneralError(const NotifyGeneralError& from);

  inline NotifyGeneralError& operator=(const NotifyGeneralError& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyGeneralError& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyGeneralError* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyGeneralError* other);

  // implements Message ----------------------------------------------

  NotifyGeneralError* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyGeneralError& from);
  void MergeFrom(const NotifyGeneralError& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Protocol.ErrorCode code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::Protocol::ErrorCode code() const;
  inline void set_code(::Protocol::ErrorCode value);

  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyGeneralError)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_content();
  inline void clear_has_content();

  ::std::string* content_;
  int code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGeneral_2eproto();
  friend void protobuf_ShutdownFile_ProtoGeneral_2eproto();

  void InitAsDefaultInstance();
  static NotifyGeneralError* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGameConfig : public ::google::protobuf::MessageLite {
 public:
  NotifyGameConfig();
  virtual ~NotifyGameConfig();

  NotifyGameConfig(const NotifyGameConfig& from);

  inline NotifyGameConfig& operator=(const NotifyGameConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyGameConfig& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyGameConfig* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyGameConfig* other);

  // implements Message ----------------------------------------------

  NotifyGameConfig* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyGameConfig& from);
  void MergeFrom(const NotifyGameConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 max_bag_size = 1;
  inline bool has_max_bag_size() const;
  inline void clear_max_bag_size();
  static const int kMaxBagSizeFieldNumber = 1;
  inline ::google::protobuf::int32 max_bag_size() const;
  inline void set_max_bag_size(::google::protobuf::int32 value);

  // optional int32 max_safe_size = 2;
  inline bool has_max_safe_size() const;
  inline void clear_max_safe_size();
  static const int kMaxSafeSizeFieldNumber = 2;
  inline ::google::protobuf::int32 max_safe_size() const;
  inline void set_max_safe_size(::google::protobuf::int32 value);

  // optional int32 unmarry_gold = 3;
  inline bool has_unmarry_gold() const;
  inline void clear_unmarry_gold();
  static const int kUnmarryGoldFieldNumber = 3;
  inline ::google::protobuf::int32 unmarry_gold() const;
  inline void set_unmarry_gold(::google::protobuf::int32 value);

  // optional int32 create_guild_money = 4;
  inline bool has_create_guild_money() const;
  inline void clear_create_guild_money();
  static const int kCreateGuildMoneyFieldNumber = 4;
  inline ::google::protobuf::int32 create_guild_money() const;
  inline void set_create_guild_money(::google::protobuf::int32 value);

  // optional int32 join_guild_level = 5;
  inline bool has_join_guild_level() const;
  inline void clear_join_guild_level();
  static const int kJoinGuildLevelFieldNumber = 5;
  inline ::google::protobuf::int32 join_guild_level() const;
  inline void set_join_guild_level(::google::protobuf::int32 value);

  // optional int32 guild_res1_itemid = 6;
  inline bool has_guild_res1_itemid() const;
  inline void clear_guild_res1_itemid();
  static const int kGuildRes1ItemidFieldNumber = 6;
  inline ::google::protobuf::int32 guild_res1_itemid() const;
  inline void set_guild_res1_itemid(::google::protobuf::int32 value);

  // optional int32 guild_res2_itemid = 7;
  inline bool has_guild_res2_itemid() const;
  inline void clear_guild_res2_itemid();
  static const int kGuildRes2ItemidFieldNumber = 7;
  inline ::google::protobuf::int32 guild_res2_itemid() const;
  inline void set_guild_res2_itemid(::google::protobuf::int32 value);

  // optional int32 guild_res1_rate = 8;
  inline bool has_guild_res1_rate() const;
  inline void clear_guild_res1_rate();
  static const int kGuildRes1RateFieldNumber = 8;
  inline ::google::protobuf::int32 guild_res1_rate() const;
  inline void set_guild_res1_rate(::google::protobuf::int32 value);

  // optional int32 guild_res2_rate = 9;
  inline bool has_guild_res2_rate() const;
  inline void clear_guild_res2_rate();
  static const int kGuildRes2RateFieldNumber = 9;
  inline ::google::protobuf::int32 guild_res2_rate() const;
  inline void set_guild_res2_rate(::google::protobuf::int32 value);

  // optional int32 revive_item = 10;
  inline bool has_revive_item() const;
  inline void clear_revive_item();
  static const int kReviveItemFieldNumber = 10;
  inline ::google::protobuf::int32 revive_item() const;
  inline void set_revive_item(::google::protobuf::int32 value);

  // optional int32 bag_extendcard = 11;
  inline bool has_bag_extendcard() const;
  inline void clear_bag_extendcard();
  static const int kBagExtendcardFieldNumber = 11;
  inline ::google::protobuf::int32 bag_extendcard() const;
  inline void set_bag_extendcard(::google::protobuf::int32 value);

  // optional int32 safe_extendcard = 12;
  inline bool has_safe_extendcard() const;
  inline void clear_safe_extendcard();
  static const int kSafeExtendcardFieldNumber = 12;
  inline ::google::protobuf::int32 safe_extendcard() const;
  inline void set_safe_extendcard(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyGameConfig)
 private:
  inline void set_has_max_bag_size();
  inline void clear_has_max_bag_size();
  inline void set_has_max_safe_size();
  inline void clear_has_max_safe_size();
  inline void set_has_unmarry_gold();
  inline void clear_has_unmarry_gold();
  inline void set_has_create_guild_money();
  inline void clear_has_create_guild_money();
  inline void set_has_join_guild_level();
  inline void clear_has_join_guild_level();
  inline void set_has_guild_res1_itemid();
  inline void clear_has_guild_res1_itemid();
  inline void set_has_guild_res2_itemid();
  inline void clear_has_guild_res2_itemid();
  inline void set_has_guild_res1_rate();
  inline void clear_has_guild_res1_rate();
  inline void set_has_guild_res2_rate();
  inline void clear_has_guild_res2_rate();
  inline void set_has_revive_item();
  inline void clear_has_revive_item();
  inline void set_has_bag_extendcard();
  inline void clear_has_bag_extendcard();
  inline void set_has_safe_extendcard();
  inline void clear_has_safe_extendcard();

  ::google::protobuf::int32 max_bag_size_;
  ::google::protobuf::int32 max_safe_size_;
  ::google::protobuf::int32 unmarry_gold_;
  ::google::protobuf::int32 create_guild_money_;
  ::google::protobuf::int32 join_guild_level_;
  ::google::protobuf::int32 guild_res1_itemid_;
  ::google::protobuf::int32 guild_res2_itemid_;
  ::google::protobuf::int32 guild_res1_rate_;
  ::google::protobuf::int32 guild_res2_rate_;
  ::google::protobuf::int32 revive_item_;
  ::google::protobuf::int32 bag_extendcard_;
  ::google::protobuf::int32 safe_extendcard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGeneral_2eproto();
  friend void protobuf_ShutdownFile_ProtoGeneral_2eproto();

  void InitAsDefaultInstance();
  static NotifyGameConfig* default_instance_;
};
// -------------------------------------------------------------------

class NotifyOpenGUI : public ::google::protobuf::MessageLite {
 public:
  NotifyOpenGUI();
  virtual ~NotifyOpenGUI();

  NotifyOpenGUI(const NotifyOpenGUI& from);

  inline NotifyOpenGUI& operator=(const NotifyOpenGUI& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyOpenGUI& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyOpenGUI* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyOpenGUI* other);

  // implements Message ----------------------------------------------

  NotifyOpenGUI* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyOpenGUI& from);
  void MergeFrom(const NotifyOpenGUI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gui_name = 1;
  inline bool has_gui_name() const;
  inline void clear_gui_name();
  static const int kGuiNameFieldNumber = 1;
  inline const ::std::string& gui_name() const;
  inline void set_gui_name(const ::std::string& value);
  inline void set_gui_name(const char* value);
  inline void set_gui_name(const char* value, size_t size);
  inline ::std::string* mutable_gui_name();
  inline ::std::string* release_gui_name();
  inline void set_allocated_gui_name(::std::string* gui_name);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyOpenGUI)
 private:
  inline void set_has_gui_name();
  inline void clear_has_gui_name();

  ::std::string* gui_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGeneral_2eproto();
  friend void protobuf_ShutdownFile_ProtoGeneral_2eproto();

  void InitAsDefaultInstance();
  static NotifyOpenGUI* default_instance_;
};
// -------------------------------------------------------------------

class NotifyCloseGUI : public ::google::protobuf::MessageLite {
 public:
  NotifyCloseGUI();
  virtual ~NotifyCloseGUI();

  NotifyCloseGUI(const NotifyCloseGUI& from);

  inline NotifyCloseGUI& operator=(const NotifyCloseGUI& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyCloseGUI& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyCloseGUI* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyCloseGUI* other);

  // implements Message ----------------------------------------------

  NotifyCloseGUI* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyCloseGUI& from);
  void MergeFrom(const NotifyCloseGUI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gui_name = 1;
  inline bool has_gui_name() const;
  inline void clear_gui_name();
  static const int kGuiNameFieldNumber = 1;
  inline const ::std::string& gui_name() const;
  inline void set_gui_name(const ::std::string& value);
  inline void set_gui_name(const char* value);
  inline void set_gui_name(const char* value, size_t size);
  inline ::std::string* mutable_gui_name();
  inline ::std::string* release_gui_name();
  inline void set_allocated_gui_name(::std::string* gui_name);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyCloseGUI)
 private:
  inline void set_has_gui_name();
  inline void clear_has_gui_name();

  ::std::string* gui_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGeneral_2eproto();
  friend void protobuf_ShutdownFile_ProtoGeneral_2eproto();

  void InitAsDefaultInstance();
  static NotifyCloseGUI* default_instance_;
};
// -------------------------------------------------------------------

class NotifyServerTime : public ::google::protobuf::MessageLite {
 public:
  NotifyServerTime();
  virtual ~NotifyServerTime();

  NotifyServerTime(const NotifyServerTime& from);

  inline NotifyServerTime& operator=(const NotifyServerTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyServerTime& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyServerTime* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyServerTime* other);

  // implements Message ----------------------------------------------

  NotifyServerTime* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyServerTime& from);
  void MergeFrom(const NotifyServerTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyServerTime)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGeneral_2eproto();
  friend void protobuf_ShutdownFile_ProtoGeneral_2eproto();

  void InitAsDefaultInstance();
  static NotifyServerTime* default_instance_;
};
// -------------------------------------------------------------------

class NotifyShowGamePrompt : public ::google::protobuf::MessageLite {
 public:
  NotifyShowGamePrompt();
  virtual ~NotifyShowGamePrompt();

  NotifyShowGamePrompt(const NotifyShowGamePrompt& from);

  inline NotifyShowGamePrompt& operator=(const NotifyShowGamePrompt& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyShowGamePrompt& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyShowGamePrompt* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyShowGamePrompt* other);

  // implements Message ----------------------------------------------

  NotifyShowGamePrompt* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyShowGamePrompt& from);
  void MergeFrom(const NotifyShowGamePrompt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Protocol.GamePromptType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Protocol::GamePromptType type() const;
  inline void set_type(::Protocol::GamePromptType value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyShowGamePrompt)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();

  int type_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGeneral_2eproto();
  friend void protobuf_ShutdownFile_ProtoGeneral_2eproto();

  void InitAsDefaultInstance();
  static NotifyShowGamePrompt* default_instance_;
};
// -------------------------------------------------------------------

class NotifyHideGamePrompt : public ::google::protobuf::MessageLite {
 public:
  NotifyHideGamePrompt();
  virtual ~NotifyHideGamePrompt();

  NotifyHideGamePrompt(const NotifyHideGamePrompt& from);

  inline NotifyHideGamePrompt& operator=(const NotifyHideGamePrompt& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyHideGamePrompt& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyHideGamePrompt* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyHideGamePrompt* other);

  // implements Message ----------------------------------------------

  NotifyHideGamePrompt* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyHideGamePrompt& from);
  void MergeFrom(const NotifyHideGamePrompt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Protocol.GamePromptType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Protocol::GamePromptType type() const;
  inline void set_type(::Protocol::GamePromptType value);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyHideGamePrompt)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGeneral_2eproto();
  friend void protobuf_ShutdownFile_ProtoGeneral_2eproto();

  void InitAsDefaultInstance();
  static NotifyHideGamePrompt* default_instance_;
};
// -------------------------------------------------------------------

class RollingNoticeInfo : public ::google::protobuf::MessageLite {
 public:
  RollingNoticeInfo();
  virtual ~RollingNoticeInfo();

  RollingNoticeInfo(const RollingNoticeInfo& from);

  inline RollingNoticeInfo& operator=(const RollingNoticeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const RollingNoticeInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RollingNoticeInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RollingNoticeInfo* other);

  // implements Message ----------------------------------------------

  RollingNoticeInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RollingNoticeInfo& from);
  void MergeFrom(const RollingNoticeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // required int32 color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RollingNoticeInfo)
 private:
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_color();
  inline void clear_has_color();

  ::std::string* content_;
  ::google::protobuf::int32 color_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGeneral_2eproto();
  friend void protobuf_ShutdownFile_ProtoGeneral_2eproto();

  void InitAsDefaultInstance();
  static RollingNoticeInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRollingNotice : public ::google::protobuf::MessageLite {
 public:
  NotifyRollingNotice();
  virtual ~NotifyRollingNotice();

  NotifyRollingNotice(const NotifyRollingNotice& from);

  inline NotifyRollingNotice& operator=(const NotifyRollingNotice& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyRollingNotice& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyRollingNotice* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyRollingNotice* other);

  // implements Message ----------------------------------------------

  NotifyRollingNotice* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyRollingNotice& from);
  void MergeFrom(const NotifyRollingNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Protocol.RollingNoticeInfo contents = 1;
  inline int contents_size() const;
  inline void clear_contents();
  static const int kContentsFieldNumber = 1;
  inline const ::Protocol::RollingNoticeInfo& contents(int index) const;
  inline ::Protocol::RollingNoticeInfo* mutable_contents(int index);
  inline ::Protocol::RollingNoticeInfo* add_contents();
  inline const ::google::protobuf::RepeatedPtrField< ::Protocol::RollingNoticeInfo >&
      contents() const;
  inline ::google::protobuf::RepeatedPtrField< ::Protocol::RollingNoticeInfo >*
      mutable_contents();

  // optional int32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyRollingNotice)
 private:
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::RepeatedPtrField< ::Protocol::RollingNoticeInfo > contents_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGeneral_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGeneral_2eproto();
  friend void protobuf_ShutdownFile_ProtoGeneral_2eproto();

  void InitAsDefaultInstance();
  static NotifyRollingNotice* default_instance_;
};
// ===================================================================


// ===================================================================

// NotifyGeneralError

// optional .Protocol.ErrorCode code = 1;
inline bool NotifyGeneralError::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGeneralError::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGeneralError::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGeneralError::clear_code() {
  code_ = 1;
  clear_has_code();
}
inline ::Protocol::ErrorCode NotifyGeneralError::code() const {
  return static_cast< ::Protocol::ErrorCode >(code_);
}
inline void NotifyGeneralError::set_code(::Protocol::ErrorCode value) {
  assert(::Protocol::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
}

// optional string content = 2;
inline bool NotifyGeneralError::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGeneralError::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGeneralError::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGeneralError::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& NotifyGeneralError::content() const {
  return *content_;
}
inline void NotifyGeneralError::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void NotifyGeneralError::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void NotifyGeneralError::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyGeneralError::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* NotifyGeneralError::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyGeneralError::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NotifyGameConfig

// optional int32 max_bag_size = 1;
inline bool NotifyGameConfig::has_max_bag_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGameConfig::set_has_max_bag_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGameConfig::clear_has_max_bag_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGameConfig::clear_max_bag_size() {
  max_bag_size_ = 0;
  clear_has_max_bag_size();
}
inline ::google::protobuf::int32 NotifyGameConfig::max_bag_size() const {
  return max_bag_size_;
}
inline void NotifyGameConfig::set_max_bag_size(::google::protobuf::int32 value) {
  set_has_max_bag_size();
  max_bag_size_ = value;
}

// optional int32 max_safe_size = 2;
inline bool NotifyGameConfig::has_max_safe_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGameConfig::set_has_max_safe_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGameConfig::clear_has_max_safe_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGameConfig::clear_max_safe_size() {
  max_safe_size_ = 0;
  clear_has_max_safe_size();
}
inline ::google::protobuf::int32 NotifyGameConfig::max_safe_size() const {
  return max_safe_size_;
}
inline void NotifyGameConfig::set_max_safe_size(::google::protobuf::int32 value) {
  set_has_max_safe_size();
  max_safe_size_ = value;
}

// optional int32 unmarry_gold = 3;
inline bool NotifyGameConfig::has_unmarry_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyGameConfig::set_has_unmarry_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyGameConfig::clear_has_unmarry_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyGameConfig::clear_unmarry_gold() {
  unmarry_gold_ = 0;
  clear_has_unmarry_gold();
}
inline ::google::protobuf::int32 NotifyGameConfig::unmarry_gold() const {
  return unmarry_gold_;
}
inline void NotifyGameConfig::set_unmarry_gold(::google::protobuf::int32 value) {
  set_has_unmarry_gold();
  unmarry_gold_ = value;
}

// optional int32 create_guild_money = 4;
inline bool NotifyGameConfig::has_create_guild_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyGameConfig::set_has_create_guild_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyGameConfig::clear_has_create_guild_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyGameConfig::clear_create_guild_money() {
  create_guild_money_ = 0;
  clear_has_create_guild_money();
}
inline ::google::protobuf::int32 NotifyGameConfig::create_guild_money() const {
  return create_guild_money_;
}
inline void NotifyGameConfig::set_create_guild_money(::google::protobuf::int32 value) {
  set_has_create_guild_money();
  create_guild_money_ = value;
}

// optional int32 join_guild_level = 5;
inline bool NotifyGameConfig::has_join_guild_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyGameConfig::set_has_join_guild_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyGameConfig::clear_has_join_guild_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyGameConfig::clear_join_guild_level() {
  join_guild_level_ = 0;
  clear_has_join_guild_level();
}
inline ::google::protobuf::int32 NotifyGameConfig::join_guild_level() const {
  return join_guild_level_;
}
inline void NotifyGameConfig::set_join_guild_level(::google::protobuf::int32 value) {
  set_has_join_guild_level();
  join_guild_level_ = value;
}

// optional int32 guild_res1_itemid = 6;
inline bool NotifyGameConfig::has_guild_res1_itemid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyGameConfig::set_has_guild_res1_itemid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyGameConfig::clear_has_guild_res1_itemid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyGameConfig::clear_guild_res1_itemid() {
  guild_res1_itemid_ = 0;
  clear_has_guild_res1_itemid();
}
inline ::google::protobuf::int32 NotifyGameConfig::guild_res1_itemid() const {
  return guild_res1_itemid_;
}
inline void NotifyGameConfig::set_guild_res1_itemid(::google::protobuf::int32 value) {
  set_has_guild_res1_itemid();
  guild_res1_itemid_ = value;
}

// optional int32 guild_res2_itemid = 7;
inline bool NotifyGameConfig::has_guild_res2_itemid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotifyGameConfig::set_has_guild_res2_itemid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotifyGameConfig::clear_has_guild_res2_itemid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotifyGameConfig::clear_guild_res2_itemid() {
  guild_res2_itemid_ = 0;
  clear_has_guild_res2_itemid();
}
inline ::google::protobuf::int32 NotifyGameConfig::guild_res2_itemid() const {
  return guild_res2_itemid_;
}
inline void NotifyGameConfig::set_guild_res2_itemid(::google::protobuf::int32 value) {
  set_has_guild_res2_itemid();
  guild_res2_itemid_ = value;
}

// optional int32 guild_res1_rate = 8;
inline bool NotifyGameConfig::has_guild_res1_rate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NotifyGameConfig::set_has_guild_res1_rate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NotifyGameConfig::clear_has_guild_res1_rate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NotifyGameConfig::clear_guild_res1_rate() {
  guild_res1_rate_ = 0;
  clear_has_guild_res1_rate();
}
inline ::google::protobuf::int32 NotifyGameConfig::guild_res1_rate() const {
  return guild_res1_rate_;
}
inline void NotifyGameConfig::set_guild_res1_rate(::google::protobuf::int32 value) {
  set_has_guild_res1_rate();
  guild_res1_rate_ = value;
}

// optional int32 guild_res2_rate = 9;
inline bool NotifyGameConfig::has_guild_res2_rate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NotifyGameConfig::set_has_guild_res2_rate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NotifyGameConfig::clear_has_guild_res2_rate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NotifyGameConfig::clear_guild_res2_rate() {
  guild_res2_rate_ = 0;
  clear_has_guild_res2_rate();
}
inline ::google::protobuf::int32 NotifyGameConfig::guild_res2_rate() const {
  return guild_res2_rate_;
}
inline void NotifyGameConfig::set_guild_res2_rate(::google::protobuf::int32 value) {
  set_has_guild_res2_rate();
  guild_res2_rate_ = value;
}

// optional int32 revive_item = 10;
inline bool NotifyGameConfig::has_revive_item() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NotifyGameConfig::set_has_revive_item() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NotifyGameConfig::clear_has_revive_item() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NotifyGameConfig::clear_revive_item() {
  revive_item_ = 0;
  clear_has_revive_item();
}
inline ::google::protobuf::int32 NotifyGameConfig::revive_item() const {
  return revive_item_;
}
inline void NotifyGameConfig::set_revive_item(::google::protobuf::int32 value) {
  set_has_revive_item();
  revive_item_ = value;
}

// optional int32 bag_extendcard = 11;
inline bool NotifyGameConfig::has_bag_extendcard() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void NotifyGameConfig::set_has_bag_extendcard() {
  _has_bits_[0] |= 0x00000400u;
}
inline void NotifyGameConfig::clear_has_bag_extendcard() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void NotifyGameConfig::clear_bag_extendcard() {
  bag_extendcard_ = 0;
  clear_has_bag_extendcard();
}
inline ::google::protobuf::int32 NotifyGameConfig::bag_extendcard() const {
  return bag_extendcard_;
}
inline void NotifyGameConfig::set_bag_extendcard(::google::protobuf::int32 value) {
  set_has_bag_extendcard();
  bag_extendcard_ = value;
}

// optional int32 safe_extendcard = 12;
inline bool NotifyGameConfig::has_safe_extendcard() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void NotifyGameConfig::set_has_safe_extendcard() {
  _has_bits_[0] |= 0x00000800u;
}
inline void NotifyGameConfig::clear_has_safe_extendcard() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void NotifyGameConfig::clear_safe_extendcard() {
  safe_extendcard_ = 0;
  clear_has_safe_extendcard();
}
inline ::google::protobuf::int32 NotifyGameConfig::safe_extendcard() const {
  return safe_extendcard_;
}
inline void NotifyGameConfig::set_safe_extendcard(::google::protobuf::int32 value) {
  set_has_safe_extendcard();
  safe_extendcard_ = value;
}

// -------------------------------------------------------------------

// NotifyOpenGUI

// optional string gui_name = 1;
inline bool NotifyOpenGUI::has_gui_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyOpenGUI::set_has_gui_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyOpenGUI::clear_has_gui_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyOpenGUI::clear_gui_name() {
  if (gui_name_ != &::google::protobuf::internal::kEmptyString) {
    gui_name_->clear();
  }
  clear_has_gui_name();
}
inline const ::std::string& NotifyOpenGUI::gui_name() const {
  return *gui_name_;
}
inline void NotifyOpenGUI::set_gui_name(const ::std::string& value) {
  set_has_gui_name();
  if (gui_name_ == &::google::protobuf::internal::kEmptyString) {
    gui_name_ = new ::std::string;
  }
  gui_name_->assign(value);
}
inline void NotifyOpenGUI::set_gui_name(const char* value) {
  set_has_gui_name();
  if (gui_name_ == &::google::protobuf::internal::kEmptyString) {
    gui_name_ = new ::std::string;
  }
  gui_name_->assign(value);
}
inline void NotifyOpenGUI::set_gui_name(const char* value, size_t size) {
  set_has_gui_name();
  if (gui_name_ == &::google::protobuf::internal::kEmptyString) {
    gui_name_ = new ::std::string;
  }
  gui_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyOpenGUI::mutable_gui_name() {
  set_has_gui_name();
  if (gui_name_ == &::google::protobuf::internal::kEmptyString) {
    gui_name_ = new ::std::string;
  }
  return gui_name_;
}
inline ::std::string* NotifyOpenGUI::release_gui_name() {
  clear_has_gui_name();
  if (gui_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gui_name_;
    gui_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyOpenGUI::set_allocated_gui_name(::std::string* gui_name) {
  if (gui_name_ != &::google::protobuf::internal::kEmptyString) {
    delete gui_name_;
  }
  if (gui_name) {
    set_has_gui_name();
    gui_name_ = gui_name;
  } else {
    clear_has_gui_name();
    gui_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NotifyCloseGUI

// optional string gui_name = 1;
inline bool NotifyCloseGUI::has_gui_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyCloseGUI::set_has_gui_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyCloseGUI::clear_has_gui_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyCloseGUI::clear_gui_name() {
  if (gui_name_ != &::google::protobuf::internal::kEmptyString) {
    gui_name_->clear();
  }
  clear_has_gui_name();
}
inline const ::std::string& NotifyCloseGUI::gui_name() const {
  return *gui_name_;
}
inline void NotifyCloseGUI::set_gui_name(const ::std::string& value) {
  set_has_gui_name();
  if (gui_name_ == &::google::protobuf::internal::kEmptyString) {
    gui_name_ = new ::std::string;
  }
  gui_name_->assign(value);
}
inline void NotifyCloseGUI::set_gui_name(const char* value) {
  set_has_gui_name();
  if (gui_name_ == &::google::protobuf::internal::kEmptyString) {
    gui_name_ = new ::std::string;
  }
  gui_name_->assign(value);
}
inline void NotifyCloseGUI::set_gui_name(const char* value, size_t size) {
  set_has_gui_name();
  if (gui_name_ == &::google::protobuf::internal::kEmptyString) {
    gui_name_ = new ::std::string;
  }
  gui_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyCloseGUI::mutable_gui_name() {
  set_has_gui_name();
  if (gui_name_ == &::google::protobuf::internal::kEmptyString) {
    gui_name_ = new ::std::string;
  }
  return gui_name_;
}
inline ::std::string* NotifyCloseGUI::release_gui_name() {
  clear_has_gui_name();
  if (gui_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gui_name_;
    gui_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyCloseGUI::set_allocated_gui_name(::std::string* gui_name) {
  if (gui_name_ != &::google::protobuf::internal::kEmptyString) {
    delete gui_name_;
  }
  if (gui_name) {
    set_has_gui_name();
    gui_name_ = gui_name;
  } else {
    clear_has_gui_name();
    gui_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NotifyServerTime

// optional int64 time = 1;
inline bool NotifyServerTime::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyServerTime::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyServerTime::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyServerTime::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 NotifyServerTime::time() const {
  return time_;
}
inline void NotifyServerTime::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// NotifyShowGamePrompt

// optional .Protocol.GamePromptType type = 1;
inline bool NotifyShowGamePrompt::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyShowGamePrompt::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyShowGamePrompt::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyShowGamePrompt::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Protocol::GamePromptType NotifyShowGamePrompt::type() const {
  return static_cast< ::Protocol::GamePromptType >(type_);
}
inline void NotifyShowGamePrompt::set_type(::Protocol::GamePromptType value) {
  assert(::Protocol::GamePromptType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional int32 count = 2;
inline bool NotifyShowGamePrompt::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyShowGamePrompt::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyShowGamePrompt::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyShowGamePrompt::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 NotifyShowGamePrompt::count() const {
  return count_;
}
inline void NotifyShowGamePrompt::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// NotifyHideGamePrompt

// optional .Protocol.GamePromptType type = 1;
inline bool NotifyHideGamePrompt::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyHideGamePrompt::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyHideGamePrompt::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyHideGamePrompt::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Protocol::GamePromptType NotifyHideGamePrompt::type() const {
  return static_cast< ::Protocol::GamePromptType >(type_);
}
inline void NotifyHideGamePrompt::set_type(::Protocol::GamePromptType value) {
  assert(::Protocol::GamePromptType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// RollingNoticeInfo

// required string content = 1;
inline bool RollingNoticeInfo::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RollingNoticeInfo::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RollingNoticeInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RollingNoticeInfo::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& RollingNoticeInfo::content() const {
  return *content_;
}
inline void RollingNoticeInfo::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void RollingNoticeInfo::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void RollingNoticeInfo::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RollingNoticeInfo::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* RollingNoticeInfo::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RollingNoticeInfo::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 color = 2;
inline bool RollingNoticeInfo::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RollingNoticeInfo::set_has_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RollingNoticeInfo::clear_has_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RollingNoticeInfo::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 RollingNoticeInfo::color() const {
  return color_;
}
inline void RollingNoticeInfo::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}

// -------------------------------------------------------------------

// NotifyRollingNotice

// repeated .Protocol.RollingNoticeInfo contents = 1;
inline int NotifyRollingNotice::contents_size() const {
  return contents_.size();
}
inline void NotifyRollingNotice::clear_contents() {
  contents_.Clear();
}
inline const ::Protocol::RollingNoticeInfo& NotifyRollingNotice::contents(int index) const {
  return contents_.Get(index);
}
inline ::Protocol::RollingNoticeInfo* NotifyRollingNotice::mutable_contents(int index) {
  return contents_.Mutable(index);
}
inline ::Protocol::RollingNoticeInfo* NotifyRollingNotice::add_contents() {
  return contents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Protocol::RollingNoticeInfo >&
NotifyRollingNotice::contents() const {
  return contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::Protocol::RollingNoticeInfo >*
NotifyRollingNotice::mutable_contents() {
  return &contents_;
}

// optional int32 times = 2;
inline bool NotifyRollingNotice::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRollingNotice::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRollingNotice::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRollingNotice::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 NotifyRollingNotice::times() const {
  return times_;
}
inline void NotifyRollingNotice::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoGeneral_2eproto__INCLUDED
