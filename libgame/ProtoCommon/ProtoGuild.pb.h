// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoGuild.proto

#ifndef PROTOBUF_ProtoGuild_2eproto__INCLUDED
#define PROTOBUF_ProtoGuild_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "ProtoGameData.pb.h"
// @@protoc_insertion_point(includes)

namespace Protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoGuild_2eproto();
void protobuf_AssignDesc_ProtoGuild_2eproto();
void protobuf_ShutdownFile_ProtoGuild_2eproto();

class GuildInfo;
class GuildMemberInfo;
class GuildSkillData;
class GuildApplyInfo;
class RequestCreateGuild;
class ResponseCreateGuild;
class RequestGetGuildList;
class ResponseGetGuildList;
class RequestGetGuildMemberList;
class ResponseGetGuildMemberList;
class RequestApplyJoinGuild;
class RequestInviteJoinGuild;
class NotifyInviteJoinGuild;
class RequestInviteResult;
class RequestGuildRemoveMember;
class NotifyGuildRemoveMember;
class NotifyGuildAddMember;
class RequestChangeGuildTitle;
class NotifyChangeGuildTitle;
class RequestChangeGuildNotice;
class NotifyChangeGuildNotice;
class RequestChangeGuildRequire;
class ResponseChangeGuildRequire;
class NotifyUpdateGuildMember;
class RequestGetApplyList;
class ResponseGetApplyList;
class RequestProcessApply;
class RequestUpdateGuildInfo;
class NotifyUpdateGuildInfo;
class RequestGuildDonateResource;
class NotifyGuildDonateResource;
class RequestGuildUpgrade;
class NotifyGuildUpgrade;
class RequestGuildDevelopSkill;
class NotifyGuildDevelopSkill;
class RequestGuildLearnSkill;
class ResponseGuildLearnSkill;
class RequestGetGuildSkill;
class NotifyGetGuildSkill;

enum GuildOpCode {
  OP_GUILD_CREATE_GUILD = 1,
  OP_GUILD_GET_GUILD_LIST = 2,
  OP_GUILD_APPLY_JOIN = 3,
  OP_GUILD_INVITE_JOIN = 4,
  OP_GUILD_INVITE_RESULT = 5,
  OP_GUILD_GET_MEMBER_LIST = 6,
  OP_GUILD_ADD_MEMBER = 7,
  OP_GUILD_REMOVE_MEMBER = 8,
  OP_GUILD_UPDATE_MEMBER = 9,
  OP_GUILD_CHANGE_TITLE = 10,
  OP_GUILD_CHANGE_NOTICE = 11,
  OP_GUILD_CHANGE_REQUIRE = 12,
  OP_GUILD_GET_APPLY_LIST = 13,
  OP_GUILD_PROCESS_APPLY = 14,
  OP_GUILD_UPDATE_GUILD_INFO = 15,
  OP_GUILD_DONATE_RESOURCE = 16,
  OP_GUILD_UPGRADE = 17,
  OP_GUILD_DEVELOP_SKILL = 18,
  OP_GUILD_LEARN_SKILL = 19,
  OP_GUILD_GET_SKILL_INFO = 20
};
bool GuildOpCode_IsValid(int value);
const GuildOpCode GuildOpCode_MIN = OP_GUILD_CREATE_GUILD;
const GuildOpCode GuildOpCode_MAX = OP_GUILD_GET_SKILL_INFO;
const int GuildOpCode_ARRAYSIZE = GuildOpCode_MAX + 1;

enum GuildTitle {
  GUILD_MEMBER = 0,
  GUILD_MASTER = 1,
  GUILD_SECOND = 2,
  GUILD_THIRD = 3,
  GUILD_TITLE_MAX = 4
};
bool GuildTitle_IsValid(int value);
const GuildTitle GuildTitle_MIN = GUILD_MEMBER;
const GuildTitle GuildTitle_MAX = GUILD_TITLE_MAX;
const int GuildTitle_ARRAYSIZE = GuildTitle_MAX + 1;

// ===================================================================

class GuildInfo : public ::google::protobuf::MessageLite {
 public:
  GuildInfo();
  virtual ~GuildInfo();

  GuildInfo(const GuildInfo& from);

  inline GuildInfo& operator=(const GuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const GuildInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GuildInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GuildInfo* other);

  // implements Message ----------------------------------------------

  GuildInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GuildInfo& from);
  void MergeFrom(const GuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 guildid = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  inline ::google::protobuf::int32 guildid() const;
  inline void set_guildid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string master = 3;
  inline bool has_master() const;
  inline void clear_master();
  static const int kMasterFieldNumber = 3;
  inline const ::std::string& master() const;
  inline void set_master(const ::std::string& value);
  inline void set_master(const char* value);
  inline void set_master(const char* value, size_t size);
  inline ::std::string* mutable_master();
  inline ::std::string* release_master();
  inline void set_allocated_master(::std::string* master);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 cur_member = 5;
  inline bool has_cur_member() const;
  inline void clear_cur_member();
  static const int kCurMemberFieldNumber = 5;
  inline ::google::protobuf::int32 cur_member() const;
  inline void set_cur_member(::google::protobuf::int32 value);

  // optional int32 max_member = 6;
  inline bool has_max_member() const;
  inline void clear_max_member();
  static const int kMaxMemberFieldNumber = 6;
  inline ::google::protobuf::int32 max_member() const;
  inline void set_max_member(::google::protobuf::int32 value);

  // optional int32 require_level = 7;
  inline bool has_require_level() const;
  inline void clear_require_level();
  static const int kRequireLevelFieldNumber = 7;
  inline ::google::protobuf::int32 require_level() const;
  inline void set_require_level(::google::protobuf::int32 value);

  // optional bool require_verify = 8;
  inline bool has_require_verify() const;
  inline void clear_require_verify();
  static const int kRequireVerifyFieldNumber = 8;
  inline bool require_verify() const;
  inline void set_require_verify(bool value);

  // optional string notice = 9;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 9;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // optional int32 credits = 10;
  inline bool has_credits() const;
  inline void clear_credits();
  static const int kCreditsFieldNumber = 10;
  inline ::google::protobuf::int32 credits() const;
  inline void set_credits(::google::protobuf::int32 value);

  // optional int32 resource1 = 11;
  inline bool has_resource1() const;
  inline void clear_resource1();
  static const int kResource1FieldNumber = 11;
  inline ::google::protobuf::int32 resource1() const;
  inline void set_resource1(::google::protobuf::int32 value);

  // optional int32 resource2 = 12;
  inline bool has_resource2() const;
  inline void clear_resource2();
  static const int kResource2FieldNumber = 12;
  inline ::google::protobuf::int32 resource2() const;
  inline void set_resource2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.GuildInfo)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_master();
  inline void clear_has_master();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_cur_member();
  inline void clear_has_cur_member();
  inline void set_has_max_member();
  inline void clear_has_max_member();
  inline void set_has_require_level();
  inline void clear_has_require_level();
  inline void set_has_require_verify();
  inline void clear_has_require_verify();
  inline void set_has_notice();
  inline void clear_has_notice();
  inline void set_has_credits();
  inline void clear_has_credits();
  inline void set_has_resource1();
  inline void clear_has_resource1();
  inline void set_has_resource2();
  inline void clear_has_resource2();

  ::std::string* name_;
  ::google::protobuf::int32 guildid_;
  ::google::protobuf::int32 level_;
  ::std::string* master_;
  ::google::protobuf::int32 cur_member_;
  ::google::protobuf::int32 max_member_;
  ::google::protobuf::int32 require_level_;
  bool require_verify_;
  ::std::string* notice_;
  ::google::protobuf::int32 credits_;
  ::google::protobuf::int32 resource1_;
  ::google::protobuf::int32 resource2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static GuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberInfo : public ::google::protobuf::MessageLite {
 public:
  GuildMemberInfo();
  virtual ~GuildMemberInfo();

  GuildMemberInfo(const GuildMemberInfo& from);

  inline GuildMemberInfo& operator=(const GuildMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const GuildMemberInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GuildMemberInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GuildMemberInfo* other);

  // implements Message ----------------------------------------------

  GuildMemberInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GuildMemberInfo& from);
  void MergeFrom(const GuildMemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int32 charid() const;
  inline void set_charid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 race = 3;
  inline bool has_race() const;
  inline void clear_race();
  static const int kRaceFieldNumber = 3;
  inline ::google::protobuf::int32 race() const;
  inline void set_race(::google::protobuf::int32 value);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional .Protocol.GuildTitle title = 5;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 5;
  inline ::Protocol::GuildTitle title() const;
  inline void set_title(::Protocol::GuildTitle value);

  // optional int32 credits = 6;
  inline bool has_credits() const;
  inline void clear_credits();
  static const int kCreditsFieldNumber = 6;
  inline ::google::protobuf::int32 credits() const;
  inline void set_credits(::google::protobuf::int32 value);

  // optional int32 total_credits = 7;
  inline bool has_total_credits() const;
  inline void clear_total_credits();
  static const int kTotalCreditsFieldNumber = 7;
  inline ::google::protobuf::int32 total_credits() const;
  inline void set_total_credits(::google::protobuf::int32 value);

  // optional uint32 jointime = 8;
  inline bool has_jointime() const;
  inline void clear_jointime();
  static const int kJointimeFieldNumber = 8;
  inline ::google::protobuf::uint32 jointime() const;
  inline void set_jointime(::google::protobuf::uint32 value);

  // optional bool online = 9;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 9;
  inline bool online() const;
  inline void set_online(bool value);

  // optional uint32 offlinetime = 10;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflinetimeFieldNumber = 10;
  inline ::google::protobuf::uint32 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Protocol.GuildMemberInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_race();
  inline void clear_has_race();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_credits();
  inline void clear_has_credits();
  inline void set_has_total_credits();
  inline void clear_has_total_credits();
  inline void set_has_jointime();
  inline void clear_has_jointime();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();

  ::std::string* name_;
  ::google::protobuf::int32 charid_;
  ::google::protobuf::int32 race_;
  ::google::protobuf::int32 level_;
  int title_;
  ::google::protobuf::int32 credits_;
  ::google::protobuf::int32 total_credits_;
  ::google::protobuf::uint32 jointime_;
  bool online_;
  ::google::protobuf::uint32 offlinetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildSkillData : public ::google::protobuf::MessageLite {
 public:
  GuildSkillData();
  virtual ~GuildSkillData();

  GuildSkillData(const GuildSkillData& from);

  inline GuildSkillData& operator=(const GuildSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  static const GuildSkillData& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GuildSkillData* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GuildSkillData* other);

  // implements Message ----------------------------------------------

  GuildSkillData* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GuildSkillData& from);
  void MergeFrom(const GuildSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.GuildSkillData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static GuildSkillData* default_instance_;
};
// -------------------------------------------------------------------

class GuildApplyInfo : public ::google::protobuf::MessageLite {
 public:
  GuildApplyInfo();
  virtual ~GuildApplyInfo();

  GuildApplyInfo(const GuildApplyInfo& from);

  inline GuildApplyInfo& operator=(const GuildApplyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const GuildApplyInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GuildApplyInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GuildApplyInfo* other);

  // implements Message ----------------------------------------------

  GuildApplyInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GuildApplyInfo& from);
  void MergeFrom(const GuildApplyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int32 charid() const;
  inline void set_charid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 race = 3;
  inline bool has_race() const;
  inline void clear_race();
  static const int kRaceFieldNumber = 3;
  inline ::google::protobuf::int32 race() const;
  inline void set_race(::google::protobuf::int32 value);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.GuildApplyInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_race();
  inline void clear_has_race();
  inline void set_has_level();
  inline void clear_has_level();

  ::std::string* name_;
  ::google::protobuf::int32 charid_;
  ::google::protobuf::int32 race_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static GuildApplyInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestCreateGuild : public ::google::protobuf::MessageLite {
 public:
  RequestCreateGuild();
  virtual ~RequestCreateGuild();

  RequestCreateGuild(const RequestCreateGuild& from);

  inline RequestCreateGuild& operator=(const RequestCreateGuild& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestCreateGuild& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestCreateGuild* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestCreateGuild* other);

  // implements Message ----------------------------------------------

  RequestCreateGuild* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestCreateGuild& from);
  void MergeFrom(const RequestCreateGuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Protocol.RequestCreateGuild)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestCreateGuild* default_instance_;
};
// -------------------------------------------------------------------

class ResponseCreateGuild : public ::google::protobuf::MessageLite {
 public:
  ResponseCreateGuild();
  virtual ~ResponseCreateGuild();

  ResponseCreateGuild(const ResponseCreateGuild& from);

  inline ResponseCreateGuild& operator=(const ResponseCreateGuild& from) {
    CopyFrom(from);
    return *this;
  }

  static const ResponseCreateGuild& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ResponseCreateGuild* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ResponseCreateGuild* other);

  // implements Message ----------------------------------------------

  ResponseCreateGuild* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ResponseCreateGuild& from);
  void MergeFrom(const ResponseCreateGuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 max_member = 3;
  inline bool has_max_member() const;
  inline void clear_max_member();
  static const int kMaxMemberFieldNumber = 3;
  inline ::google::protobuf::int32 max_member() const;
  inline void set_max_member(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.ResponseCreateGuild)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_max_member();
  inline void clear_has_max_member();

  ::std::string* name_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 max_member_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static ResponseCreateGuild* default_instance_;
};
// -------------------------------------------------------------------

class RequestGetGuildList : public ::google::protobuf::MessageLite {
 public:
  RequestGetGuildList();
  virtual ~RequestGetGuildList();

  RequestGetGuildList(const RequestGetGuildList& from);

  inline RequestGetGuildList& operator=(const RequestGetGuildList& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestGetGuildList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestGetGuildList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestGetGuildList* other);

  // implements Message ----------------------------------------------

  RequestGetGuildList* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestGetGuildList& from);
  void MergeFrom(const RequestGetGuildList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 page = 1 [default = 1];
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 1;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestGetGuildList)
 private:
  inline void set_has_page();
  inline void clear_has_page();

  ::google::protobuf::int32 page_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestGetGuildList* default_instance_;
};
// -------------------------------------------------------------------

class ResponseGetGuildList : public ::google::protobuf::MessageLite {
 public:
  ResponseGetGuildList();
  virtual ~ResponseGetGuildList();

  ResponseGetGuildList(const ResponseGetGuildList& from);

  inline ResponseGetGuildList& operator=(const ResponseGetGuildList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ResponseGetGuildList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ResponseGetGuildList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ResponseGetGuildList* other);

  // implements Message ----------------------------------------------

  ResponseGetGuildList* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ResponseGetGuildList& from);
  void MergeFrom(const ResponseGetGuildList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 page = 1;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 1;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);

  // optional int32 max_page = 2;
  inline bool has_max_page() const;
  inline void clear_max_page();
  static const int kMaxPageFieldNumber = 2;
  inline ::google::protobuf::int32 max_page() const;
  inline void set_max_page(::google::protobuf::int32 value);

  // repeated .Protocol.GuildInfo guild_list = 3;
  inline int guild_list_size() const;
  inline void clear_guild_list();
  static const int kGuildListFieldNumber = 3;
  inline const ::Protocol::GuildInfo& guild_list(int index) const;
  inline ::Protocol::GuildInfo* mutable_guild_list(int index);
  inline ::Protocol::GuildInfo* add_guild_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Protocol::GuildInfo >&
      guild_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Protocol::GuildInfo >*
      mutable_guild_list();

  // @@protoc_insertion_point(class_scope:Protocol.ResponseGetGuildList)
 private:
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_max_page();
  inline void clear_has_max_page();

  ::google::protobuf::int32 page_;
  ::google::protobuf::int32 max_page_;
  ::google::protobuf::RepeatedPtrField< ::Protocol::GuildInfo > guild_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static ResponseGetGuildList* default_instance_;
};
// -------------------------------------------------------------------

class RequestGetGuildMemberList : public ::google::protobuf::MessageLite {
 public:
  RequestGetGuildMemberList();
  virtual ~RequestGetGuildMemberList();

  RequestGetGuildMemberList(const RequestGetGuildMemberList& from);

  inline RequestGetGuildMemberList& operator=(const RequestGetGuildMemberList& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestGetGuildMemberList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestGetGuildMemberList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestGetGuildMemberList* other);

  // implements Message ----------------------------------------------

  RequestGetGuildMemberList* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestGetGuildMemberList& from);
  void MergeFrom(const RequestGetGuildMemberList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reserve = 1;
  inline bool has_reserve() const;
  inline void clear_reserve();
  static const int kReserveFieldNumber = 1;
  inline ::google::protobuf::int32 reserve() const;
  inline void set_reserve(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestGetGuildMemberList)
 private:
  inline void set_has_reserve();
  inline void clear_has_reserve();

  ::google::protobuf::int32 reserve_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestGetGuildMemberList* default_instance_;
};
// -------------------------------------------------------------------

class ResponseGetGuildMemberList : public ::google::protobuf::MessageLite {
 public:
  ResponseGetGuildMemberList();
  virtual ~ResponseGetGuildMemberList();

  ResponseGetGuildMemberList(const ResponseGetGuildMemberList& from);

  inline ResponseGetGuildMemberList& operator=(const ResponseGetGuildMemberList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ResponseGetGuildMemberList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ResponseGetGuildMemberList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ResponseGetGuildMemberList* other);

  // implements Message ----------------------------------------------

  ResponseGetGuildMemberList* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ResponseGetGuildMemberList& from);
  void MergeFrom(const ResponseGetGuildMemberList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Protocol.GuildMemberInfo member_list = 1;
  inline int member_list_size() const;
  inline void clear_member_list();
  static const int kMemberListFieldNumber = 1;
  inline const ::Protocol::GuildMemberInfo& member_list(int index) const;
  inline ::Protocol::GuildMemberInfo* mutable_member_list(int index);
  inline ::Protocol::GuildMemberInfo* add_member_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Protocol::GuildMemberInfo >&
      member_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Protocol::GuildMemberInfo >*
      mutable_member_list();

  // @@protoc_insertion_point(class_scope:Protocol.ResponseGetGuildMemberList)
 private:

  ::google::protobuf::RepeatedPtrField< ::Protocol::GuildMemberInfo > member_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static ResponseGetGuildMemberList* default_instance_;
};
// -------------------------------------------------------------------

class RequestApplyJoinGuild : public ::google::protobuf::MessageLite {
 public:
  RequestApplyJoinGuild();
  virtual ~RequestApplyJoinGuild();

  RequestApplyJoinGuild(const RequestApplyJoinGuild& from);

  inline RequestApplyJoinGuild& operator=(const RequestApplyJoinGuild& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestApplyJoinGuild& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestApplyJoinGuild* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestApplyJoinGuild* other);

  // implements Message ----------------------------------------------

  RequestApplyJoinGuild* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestApplyJoinGuild& from);
  void MergeFrom(const RequestApplyJoinGuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Protocol.RequestApplyJoinGuild)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestApplyJoinGuild* default_instance_;
};
// -------------------------------------------------------------------

class RequestInviteJoinGuild : public ::google::protobuf::MessageLite {
 public:
  RequestInviteJoinGuild();
  virtual ~RequestInviteJoinGuild();

  RequestInviteJoinGuild(const RequestInviteJoinGuild& from);

  inline RequestInviteJoinGuild& operator=(const RequestInviteJoinGuild& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestInviteJoinGuild& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestInviteJoinGuild* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestInviteJoinGuild* other);

  // implements Message ----------------------------------------------

  RequestInviteJoinGuild* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestInviteJoinGuild& from);
  void MergeFrom(const RequestInviteJoinGuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string charname = 1;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 1;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // @@protoc_insertion_point(class_scope:Protocol.RequestInviteJoinGuild)
 private:
  inline void set_has_charname();
  inline void clear_has_charname();

  ::std::string* charname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestInviteJoinGuild* default_instance_;
};
// -------------------------------------------------------------------

class NotifyInviteJoinGuild : public ::google::protobuf::MessageLite {
 public:
  NotifyInviteJoinGuild();
  virtual ~NotifyInviteJoinGuild();

  NotifyInviteJoinGuild(const NotifyInviteJoinGuild& from);

  inline NotifyInviteJoinGuild& operator=(const NotifyInviteJoinGuild& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyInviteJoinGuild& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyInviteJoinGuild* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyInviteJoinGuild* other);

  // implements Message ----------------------------------------------

  NotifyInviteJoinGuild* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyInviteJoinGuild& from);
  void MergeFrom(const NotifyInviteJoinGuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string charname = 1;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 1;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional string guildname = 2;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 2;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyInviteJoinGuild)
 private:
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_guildname();
  inline void clear_has_guildname();

  ::std::string* charname_;
  ::std::string* guildname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyInviteJoinGuild* default_instance_;
};
// -------------------------------------------------------------------

class RequestInviteResult : public ::google::protobuf::MessageLite {
 public:
  RequestInviteResult();
  virtual ~RequestInviteResult();

  RequestInviteResult(const RequestInviteResult& from);

  inline RequestInviteResult& operator=(const RequestInviteResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestInviteResult& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestInviteResult* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestInviteResult* other);

  // implements Message ----------------------------------------------

  RequestInviteResult* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestInviteResult& from);
  void MergeFrom(const RequestInviteResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 agree = 1;
  inline bool has_agree() const;
  inline void clear_agree();
  static const int kAgreeFieldNumber = 1;
  inline ::google::protobuf::int32 agree() const;
  inline void set_agree(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestInviteResult)
 private:
  inline void set_has_agree();
  inline void clear_has_agree();

  ::google::protobuf::int32 agree_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestInviteResult* default_instance_;
};
// -------------------------------------------------------------------

class RequestGuildRemoveMember : public ::google::protobuf::MessageLite {
 public:
  RequestGuildRemoveMember();
  virtual ~RequestGuildRemoveMember();

  RequestGuildRemoveMember(const RequestGuildRemoveMember& from);

  inline RequestGuildRemoveMember& operator=(const RequestGuildRemoveMember& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestGuildRemoveMember& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestGuildRemoveMember* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestGuildRemoveMember* other);

  // implements Message ----------------------------------------------

  RequestGuildRemoveMember* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestGuildRemoveMember& from);
  void MergeFrom(const RequestGuildRemoveMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Protocol.RequestGuildRemoveMember)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestGuildRemoveMember* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGuildRemoveMember : public ::google::protobuf::MessageLite {
 public:
  NotifyGuildRemoveMember();
  virtual ~NotifyGuildRemoveMember();

  NotifyGuildRemoveMember(const NotifyGuildRemoveMember& from);

  inline NotifyGuildRemoveMember& operator=(const NotifyGuildRemoveMember& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyGuildRemoveMember& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyGuildRemoveMember* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyGuildRemoveMember* other);

  // implements Message ----------------------------------------------

  NotifyGuildRemoveMember* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyGuildRemoveMember& from);
  void MergeFrom(const NotifyGuildRemoveMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyGuildRemoveMember)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyGuildRemoveMember* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGuildAddMember : public ::google::protobuf::MessageLite {
 public:
  NotifyGuildAddMember();
  virtual ~NotifyGuildAddMember();

  NotifyGuildAddMember(const NotifyGuildAddMember& from);

  inline NotifyGuildAddMember& operator=(const NotifyGuildAddMember& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyGuildAddMember& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyGuildAddMember* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyGuildAddMember* other);

  // implements Message ----------------------------------------------

  NotifyGuildAddMember* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyGuildAddMember& from);
  void MergeFrom(const NotifyGuildAddMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Protocol.GuildMemberInfo member_info = 1;
  inline bool has_member_info() const;
  inline void clear_member_info();
  static const int kMemberInfoFieldNumber = 1;
  inline const ::Protocol::GuildMemberInfo& member_info() const;
  inline ::Protocol::GuildMemberInfo* mutable_member_info();
  inline ::Protocol::GuildMemberInfo* release_member_info();
  inline void set_allocated_member_info(::Protocol::GuildMemberInfo* member_info);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyGuildAddMember)
 private:
  inline void set_has_member_info();
  inline void clear_has_member_info();

  ::Protocol::GuildMemberInfo* member_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyGuildAddMember* default_instance_;
};
// -------------------------------------------------------------------

class RequestChangeGuildTitle : public ::google::protobuf::MessageLite {
 public:
  RequestChangeGuildTitle();
  virtual ~RequestChangeGuildTitle();

  RequestChangeGuildTitle(const RequestChangeGuildTitle& from);

  inline RequestChangeGuildTitle& operator=(const RequestChangeGuildTitle& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestChangeGuildTitle& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestChangeGuildTitle* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestChangeGuildTitle* other);

  // implements Message ----------------------------------------------

  RequestChangeGuildTitle* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestChangeGuildTitle& from);
  void MergeFrom(const RequestChangeGuildTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .Protocol.GuildTitle title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline ::Protocol::GuildTitle title() const;
  inline void set_title(::Protocol::GuildTitle value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestChangeGuildTitle)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_title();
  inline void clear_has_title();

  ::std::string* name_;
  int title_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestChangeGuildTitle* default_instance_;
};
// -------------------------------------------------------------------

class NotifyChangeGuildTitle : public ::google::protobuf::MessageLite {
 public:
  NotifyChangeGuildTitle();
  virtual ~NotifyChangeGuildTitle();

  NotifyChangeGuildTitle(const NotifyChangeGuildTitle& from);

  inline NotifyChangeGuildTitle& operator=(const NotifyChangeGuildTitle& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyChangeGuildTitle& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyChangeGuildTitle* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyChangeGuildTitle* other);

  // implements Message ----------------------------------------------

  NotifyChangeGuildTitle* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyChangeGuildTitle& from);
  void MergeFrom(const NotifyChangeGuildTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .Protocol.GuildTitle title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline ::Protocol::GuildTitle title() const;
  inline void set_title(::Protocol::GuildTitle value);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyChangeGuildTitle)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_title();
  inline void clear_has_title();

  ::std::string* name_;
  int title_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyChangeGuildTitle* default_instance_;
};
// -------------------------------------------------------------------

class RequestChangeGuildNotice : public ::google::protobuf::MessageLite {
 public:
  RequestChangeGuildNotice();
  virtual ~RequestChangeGuildNotice();

  RequestChangeGuildNotice(const RequestChangeGuildNotice& from);

  inline RequestChangeGuildNotice& operator=(const RequestChangeGuildNotice& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestChangeGuildNotice& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestChangeGuildNotice* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestChangeGuildNotice* other);

  // implements Message ----------------------------------------------

  RequestChangeGuildNotice* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestChangeGuildNotice& from);
  void MergeFrom(const RequestChangeGuildNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string notice = 1;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 1;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // @@protoc_insertion_point(class_scope:Protocol.RequestChangeGuildNotice)
 private:
  inline void set_has_notice();
  inline void clear_has_notice();

  ::std::string* notice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestChangeGuildNotice* default_instance_;
};
// -------------------------------------------------------------------

class NotifyChangeGuildNotice : public ::google::protobuf::MessageLite {
 public:
  NotifyChangeGuildNotice();
  virtual ~NotifyChangeGuildNotice();

  NotifyChangeGuildNotice(const NotifyChangeGuildNotice& from);

  inline NotifyChangeGuildNotice& operator=(const NotifyChangeGuildNotice& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyChangeGuildNotice& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyChangeGuildNotice* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyChangeGuildNotice* other);

  // implements Message ----------------------------------------------

  NotifyChangeGuildNotice* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyChangeGuildNotice& from);
  void MergeFrom(const NotifyChangeGuildNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string notice = 1;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 1;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyChangeGuildNotice)
 private:
  inline void set_has_notice();
  inline void clear_has_notice();

  ::std::string* notice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyChangeGuildNotice* default_instance_;
};
// -------------------------------------------------------------------

class RequestChangeGuildRequire : public ::google::protobuf::MessageLite {
 public:
  RequestChangeGuildRequire();
  virtual ~RequestChangeGuildRequire();

  RequestChangeGuildRequire(const RequestChangeGuildRequire& from);

  inline RequestChangeGuildRequire& operator=(const RequestChangeGuildRequire& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestChangeGuildRequire& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestChangeGuildRequire* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestChangeGuildRequire* other);

  // implements Message ----------------------------------------------

  RequestChangeGuildRequire* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestChangeGuildRequire& from);
  void MergeFrom(const RequestChangeGuildRequire& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 require_level = 1;
  inline bool has_require_level() const;
  inline void clear_require_level();
  static const int kRequireLevelFieldNumber = 1;
  inline ::google::protobuf::int32 require_level() const;
  inline void set_require_level(::google::protobuf::int32 value);

  // optional bool require_verify = 2;
  inline bool has_require_verify() const;
  inline void clear_require_verify();
  static const int kRequireVerifyFieldNumber = 2;
  inline bool require_verify() const;
  inline void set_require_verify(bool value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestChangeGuildRequire)
 private:
  inline void set_has_require_level();
  inline void clear_has_require_level();
  inline void set_has_require_verify();
  inline void clear_has_require_verify();

  ::google::protobuf::int32 require_level_;
  bool require_verify_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestChangeGuildRequire* default_instance_;
};
// -------------------------------------------------------------------

class ResponseChangeGuildRequire : public ::google::protobuf::MessageLite {
 public:
  ResponseChangeGuildRequire();
  virtual ~ResponseChangeGuildRequire();

  ResponseChangeGuildRequire(const ResponseChangeGuildRequire& from);

  inline ResponseChangeGuildRequire& operator=(const ResponseChangeGuildRequire& from) {
    CopyFrom(from);
    return *this;
  }

  static const ResponseChangeGuildRequire& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ResponseChangeGuildRequire* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ResponseChangeGuildRequire* other);

  // implements Message ----------------------------------------------

  ResponseChangeGuildRequire* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ResponseChangeGuildRequire& from);
  void MergeFrom(const ResponseChangeGuildRequire& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.ResponseChangeGuildRequire)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static ResponseChangeGuildRequire* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUpdateGuildMember : public ::google::protobuf::MessageLite {
 public:
  NotifyUpdateGuildMember();
  virtual ~NotifyUpdateGuildMember();

  NotifyUpdateGuildMember(const NotifyUpdateGuildMember& from);

  inline NotifyUpdateGuildMember& operator=(const NotifyUpdateGuildMember& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyUpdateGuildMember& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyUpdateGuildMember* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyUpdateGuildMember* other);

  // implements Message ----------------------------------------------

  NotifyUpdateGuildMember* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyUpdateGuildMember& from);
  void MergeFrom(const NotifyUpdateGuildMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Protocol.GuildMemberInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Protocol::GuildMemberInfo& info() const;
  inline ::Protocol::GuildMemberInfo* mutable_info();
  inline ::Protocol::GuildMemberInfo* release_info();
  inline void set_allocated_info(::Protocol::GuildMemberInfo* info);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyUpdateGuildMember)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::Protocol::GuildMemberInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyUpdateGuildMember* default_instance_;
};
// -------------------------------------------------------------------

class RequestGetApplyList : public ::google::protobuf::MessageLite {
 public:
  RequestGetApplyList();
  virtual ~RequestGetApplyList();

  RequestGetApplyList(const RequestGetApplyList& from);

  inline RequestGetApplyList& operator=(const RequestGetApplyList& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestGetApplyList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestGetApplyList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestGetApplyList* other);

  // implements Message ----------------------------------------------

  RequestGetApplyList* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestGetApplyList& from);
  void MergeFrom(const RequestGetApplyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reserve = 1;
  inline bool has_reserve() const;
  inline void clear_reserve();
  static const int kReserveFieldNumber = 1;
  inline ::google::protobuf::int32 reserve() const;
  inline void set_reserve(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestGetApplyList)
 private:
  inline void set_has_reserve();
  inline void clear_has_reserve();

  ::google::protobuf::int32 reserve_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestGetApplyList* default_instance_;
};
// -------------------------------------------------------------------

class ResponseGetApplyList : public ::google::protobuf::MessageLite {
 public:
  ResponseGetApplyList();
  virtual ~ResponseGetApplyList();

  ResponseGetApplyList(const ResponseGetApplyList& from);

  inline ResponseGetApplyList& operator=(const ResponseGetApplyList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ResponseGetApplyList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ResponseGetApplyList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ResponseGetApplyList* other);

  // implements Message ----------------------------------------------

  ResponseGetApplyList* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ResponseGetApplyList& from);
  void MergeFrom(const ResponseGetApplyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Protocol.GuildApplyInfo apply_list = 1;
  inline int apply_list_size() const;
  inline void clear_apply_list();
  static const int kApplyListFieldNumber = 1;
  inline const ::Protocol::GuildApplyInfo& apply_list(int index) const;
  inline ::Protocol::GuildApplyInfo* mutable_apply_list(int index);
  inline ::Protocol::GuildApplyInfo* add_apply_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Protocol::GuildApplyInfo >&
      apply_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Protocol::GuildApplyInfo >*
      mutable_apply_list();

  // @@protoc_insertion_point(class_scope:Protocol.ResponseGetApplyList)
 private:

  ::google::protobuf::RepeatedPtrField< ::Protocol::GuildApplyInfo > apply_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static ResponseGetApplyList* default_instance_;
};
// -------------------------------------------------------------------

class RequestProcessApply : public ::google::protobuf::MessageLite {
 public:
  RequestProcessApply();
  virtual ~RequestProcessApply();

  RequestProcessApply(const RequestProcessApply& from);

  inline RequestProcessApply& operator=(const RequestProcessApply& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestProcessApply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestProcessApply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestProcessApply* other);

  // implements Message ----------------------------------------------

  RequestProcessApply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestProcessApply& from);
  void MergeFrom(const RequestProcessApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int32 charid() const;
  inline void set_charid(::google::protobuf::int32 value);

  // optional bool agree = 2;
  inline bool has_agree() const;
  inline void clear_agree();
  static const int kAgreeFieldNumber = 2;
  inline bool agree() const;
  inline void set_agree(bool value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestProcessApply)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_agree();
  inline void clear_has_agree();

  ::google::protobuf::int32 charid_;
  bool agree_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestProcessApply* default_instance_;
};
// -------------------------------------------------------------------

class RequestUpdateGuildInfo : public ::google::protobuf::MessageLite {
 public:
  RequestUpdateGuildInfo();
  virtual ~RequestUpdateGuildInfo();

  RequestUpdateGuildInfo(const RequestUpdateGuildInfo& from);

  inline RequestUpdateGuildInfo& operator=(const RequestUpdateGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestUpdateGuildInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestUpdateGuildInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestUpdateGuildInfo* other);

  // implements Message ----------------------------------------------

  RequestUpdateGuildInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestUpdateGuildInfo& from);
  void MergeFrom(const RequestUpdateGuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reserve = 1;
  inline bool has_reserve() const;
  inline void clear_reserve();
  static const int kReserveFieldNumber = 1;
  inline ::google::protobuf::int32 reserve() const;
  inline void set_reserve(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestUpdateGuildInfo)
 private:
  inline void set_has_reserve();
  inline void clear_has_reserve();

  ::google::protobuf::int32 reserve_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestUpdateGuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUpdateGuildInfo : public ::google::protobuf::MessageLite {
 public:
  NotifyUpdateGuildInfo();
  virtual ~NotifyUpdateGuildInfo();

  NotifyUpdateGuildInfo(const NotifyUpdateGuildInfo& from);

  inline NotifyUpdateGuildInfo& operator=(const NotifyUpdateGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyUpdateGuildInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyUpdateGuildInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyUpdateGuildInfo* other);

  // implements Message ----------------------------------------------

  NotifyUpdateGuildInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyUpdateGuildInfo& from);
  void MergeFrom(const NotifyUpdateGuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Protocol.GuildInfo guild_info = 1;
  inline bool has_guild_info() const;
  inline void clear_guild_info();
  static const int kGuildInfoFieldNumber = 1;
  inline const ::Protocol::GuildInfo& guild_info() const;
  inline ::Protocol::GuildInfo* mutable_guild_info();
  inline ::Protocol::GuildInfo* release_guild_info();
  inline void set_allocated_guild_info(::Protocol::GuildInfo* guild_info);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyUpdateGuildInfo)
 private:
  inline void set_has_guild_info();
  inline void clear_has_guild_info();

  ::Protocol::GuildInfo* guild_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyUpdateGuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestGuildDonateResource : public ::google::protobuf::MessageLite {
 public:
  RequestGuildDonateResource();
  virtual ~RequestGuildDonateResource();

  RequestGuildDonateResource(const RequestGuildDonateResource& from);

  inline RequestGuildDonateResource& operator=(const RequestGuildDonateResource& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestGuildDonateResource& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestGuildDonateResource* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestGuildDonateResource* other);

  // implements Message ----------------------------------------------

  RequestGuildDonateResource* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestGuildDonateResource& from);
  void MergeFrom(const RequestGuildDonateResource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 resource1 = 1;
  inline bool has_resource1() const;
  inline void clear_resource1();
  static const int kResource1FieldNumber = 1;
  inline ::google::protobuf::int32 resource1() const;
  inline void set_resource1(::google::protobuf::int32 value);

  // optional int32 resource2 = 2;
  inline bool has_resource2() const;
  inline void clear_resource2();
  static const int kResource2FieldNumber = 2;
  inline ::google::protobuf::int32 resource2() const;
  inline void set_resource2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestGuildDonateResource)
 private:
  inline void set_has_resource1();
  inline void clear_has_resource1();
  inline void set_has_resource2();
  inline void clear_has_resource2();

  ::google::protobuf::int32 resource1_;
  ::google::protobuf::int32 resource2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestGuildDonateResource* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGuildDonateResource : public ::google::protobuf::MessageLite {
 public:
  NotifyGuildDonateResource();
  virtual ~NotifyGuildDonateResource();

  NotifyGuildDonateResource(const NotifyGuildDonateResource& from);

  inline NotifyGuildDonateResource& operator=(const NotifyGuildDonateResource& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyGuildDonateResource& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyGuildDonateResource* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyGuildDonateResource* other);

  // implements Message ----------------------------------------------

  NotifyGuildDonateResource* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyGuildDonateResource& from);
  void MergeFrom(const NotifyGuildDonateResource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyGuildDonateResource)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyGuildDonateResource* default_instance_;
};
// -------------------------------------------------------------------

class RequestGuildUpgrade : public ::google::protobuf::MessageLite {
 public:
  RequestGuildUpgrade();
  virtual ~RequestGuildUpgrade();

  RequestGuildUpgrade(const RequestGuildUpgrade& from);

  inline RequestGuildUpgrade& operator=(const RequestGuildUpgrade& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestGuildUpgrade& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestGuildUpgrade* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestGuildUpgrade* other);

  // implements Message ----------------------------------------------

  RequestGuildUpgrade* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestGuildUpgrade& from);
  void MergeFrom(const RequestGuildUpgrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reserve = 1;
  inline bool has_reserve() const;
  inline void clear_reserve();
  static const int kReserveFieldNumber = 1;
  inline ::google::protobuf::int32 reserve() const;
  inline void set_reserve(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestGuildUpgrade)
 private:
  inline void set_has_reserve();
  inline void clear_has_reserve();

  ::google::protobuf::int32 reserve_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestGuildUpgrade* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGuildUpgrade : public ::google::protobuf::MessageLite {
 public:
  NotifyGuildUpgrade();
  virtual ~NotifyGuildUpgrade();

  NotifyGuildUpgrade(const NotifyGuildUpgrade& from);

  inline NotifyGuildUpgrade& operator=(const NotifyGuildUpgrade& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyGuildUpgrade& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyGuildUpgrade* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyGuildUpgrade* other);

  // implements Message ----------------------------------------------

  NotifyGuildUpgrade* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyGuildUpgrade& from);
  void MergeFrom(const NotifyGuildUpgrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyGuildUpgrade)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyGuildUpgrade* default_instance_;
};
// -------------------------------------------------------------------

class RequestGuildDevelopSkill : public ::google::protobuf::MessageLite {
 public:
  RequestGuildDevelopSkill();
  virtual ~RequestGuildDevelopSkill();

  RequestGuildDevelopSkill(const RequestGuildDevelopSkill& from);

  inline RequestGuildDevelopSkill& operator=(const RequestGuildDevelopSkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestGuildDevelopSkill& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestGuildDevelopSkill* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestGuildDevelopSkill* other);

  // implements Message ----------------------------------------------

  RequestGuildDevelopSkill* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestGuildDevelopSkill& from);
  void MergeFrom(const RequestGuildDevelopSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // optional int32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestGuildDevelopSkill)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestGuildDevelopSkill* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGuildDevelopSkill : public ::google::protobuf::MessageLite {
 public:
  NotifyGuildDevelopSkill();
  virtual ~NotifyGuildDevelopSkill();

  NotifyGuildDevelopSkill(const NotifyGuildDevelopSkill& from);

  inline NotifyGuildDevelopSkill& operator=(const NotifyGuildDevelopSkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyGuildDevelopSkill& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyGuildDevelopSkill* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyGuildDevelopSkill* other);

  // implements Message ----------------------------------------------

  NotifyGuildDevelopSkill* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyGuildDevelopSkill& from);
  void MergeFrom(const NotifyGuildDevelopSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // optional int32 skill_level = 3;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 3;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.NotifyGuildDevelopSkill)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyGuildDevelopSkill* default_instance_;
};
// -------------------------------------------------------------------

class RequestGuildLearnSkill : public ::google::protobuf::MessageLite {
 public:
  RequestGuildLearnSkill();
  virtual ~RequestGuildLearnSkill();

  RequestGuildLearnSkill(const RequestGuildLearnSkill& from);

  inline RequestGuildLearnSkill& operator=(const RequestGuildLearnSkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestGuildLearnSkill& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestGuildLearnSkill* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestGuildLearnSkill* other);

  // implements Message ----------------------------------------------

  RequestGuildLearnSkill* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestGuildLearnSkill& from);
  void MergeFrom(const RequestGuildLearnSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // optional int32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestGuildLearnSkill)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestGuildLearnSkill* default_instance_;
};
// -------------------------------------------------------------------

class ResponseGuildLearnSkill : public ::google::protobuf::MessageLite {
 public:
  ResponseGuildLearnSkill();
  virtual ~ResponseGuildLearnSkill();

  ResponseGuildLearnSkill(const ResponseGuildLearnSkill& from);

  inline ResponseGuildLearnSkill& operator=(const ResponseGuildLearnSkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const ResponseGuildLearnSkill& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ResponseGuildLearnSkill* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ResponseGuildLearnSkill* other);

  // implements Message ----------------------------------------------

  ResponseGuildLearnSkill* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ResponseGuildLearnSkill& from);
  void MergeFrom(const ResponseGuildLearnSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // optional int32 skill_level = 3;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 3;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.ResponseGuildLearnSkill)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static ResponseGuildLearnSkill* default_instance_;
};
// -------------------------------------------------------------------

class RequestGetGuildSkill : public ::google::protobuf::MessageLite {
 public:
  RequestGetGuildSkill();
  virtual ~RequestGetGuildSkill();

  RequestGetGuildSkill(const RequestGetGuildSkill& from);

  inline RequestGetGuildSkill& operator=(const RequestGetGuildSkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestGetGuildSkill& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RequestGetGuildSkill* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RequestGetGuildSkill* other);

  // implements Message ----------------------------------------------

  RequestGetGuildSkill* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestGetGuildSkill& from);
  void MergeFrom(const RequestGetGuildSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reserve = 1;
  inline bool has_reserve() const;
  inline void clear_reserve();
  static const int kReserveFieldNumber = 1;
  inline ::google::protobuf::int32 reserve() const;
  inline void set_reserve(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Protocol.RequestGetGuildSkill)
 private:
  inline void set_has_reserve();
  inline void clear_has_reserve();

  ::google::protobuf::int32 reserve_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static RequestGetGuildSkill* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGetGuildSkill : public ::google::protobuf::MessageLite {
 public:
  NotifyGetGuildSkill();
  virtual ~NotifyGetGuildSkill();

  NotifyGetGuildSkill(const NotifyGetGuildSkill& from);

  inline NotifyGetGuildSkill& operator=(const NotifyGetGuildSkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyGetGuildSkill& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyGetGuildSkill* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyGetGuildSkill* other);

  // implements Message ----------------------------------------------

  NotifyGetGuildSkill* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyGetGuildSkill& from);
  void MergeFrom(const NotifyGetGuildSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Protocol.GuildSkillData skill_list = 1;
  inline int skill_list_size() const;
  inline void clear_skill_list();
  static const int kSkillListFieldNumber = 1;
  inline const ::Protocol::GuildSkillData& skill_list(int index) const;
  inline ::Protocol::GuildSkillData* mutable_skill_list(int index);
  inline ::Protocol::GuildSkillData* add_skill_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Protocol::GuildSkillData >&
      skill_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Protocol::GuildSkillData >*
      mutable_skill_list();

  // @@protoc_insertion_point(class_scope:Protocol.NotifyGetGuildSkill)
 private:

  ::google::protobuf::RepeatedPtrField< ::Protocol::GuildSkillData > skill_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoGuild_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoGuild_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoGuild_2eproto();
  friend void protobuf_ShutdownFile_ProtoGuild_2eproto();

  void InitAsDefaultInstance();
  static NotifyGetGuildSkill* default_instance_;
};
// ===================================================================


// ===================================================================

// GuildInfo

// optional int32 guildid = 1;
inline bool GuildInfo::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildInfo::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildInfo::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildInfo::clear_guildid() {
  guildid_ = 0;
  clear_has_guildid();
}
inline ::google::protobuf::int32 GuildInfo::guildid() const {
  return guildid_;
}
inline void GuildInfo::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
}

// optional string name = 2;
inline bool GuildInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildInfo::name() const {
  return *name_;
}
inline void GuildInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GuildInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string master = 3;
inline bool GuildInfo::has_master() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildInfo::set_has_master() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildInfo::clear_has_master() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildInfo::clear_master() {
  if (master_ != &::google::protobuf::internal::kEmptyString) {
    master_->clear();
  }
  clear_has_master();
}
inline const ::std::string& GuildInfo::master() const {
  return *master_;
}
inline void GuildInfo::set_master(const ::std::string& value) {
  set_has_master();
  if (master_ == &::google::protobuf::internal::kEmptyString) {
    master_ = new ::std::string;
  }
  master_->assign(value);
}
inline void GuildInfo::set_master(const char* value) {
  set_has_master();
  if (master_ == &::google::protobuf::internal::kEmptyString) {
    master_ = new ::std::string;
  }
  master_->assign(value);
}
inline void GuildInfo::set_master(const char* value, size_t size) {
  set_has_master();
  if (master_ == &::google::protobuf::internal::kEmptyString) {
    master_ = new ::std::string;
  }
  master_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInfo::mutable_master() {
  set_has_master();
  if (master_ == &::google::protobuf::internal::kEmptyString) {
    master_ = new ::std::string;
  }
  return master_;
}
inline ::std::string* GuildInfo::release_master() {
  clear_has_master();
  if (master_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = master_;
    master_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildInfo::set_allocated_master(::std::string* master) {
  if (master_ != &::google::protobuf::internal::kEmptyString) {
    delete master_;
  }
  if (master) {
    set_has_master();
    master_ = master;
  } else {
    clear_has_master();
    master_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 level = 4;
inline bool GuildInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildInfo::level() const {
  return level_;
}
inline void GuildInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 cur_member = 5;
inline bool GuildInfo::has_cur_member() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildInfo::set_has_cur_member() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildInfo::clear_has_cur_member() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildInfo::clear_cur_member() {
  cur_member_ = 0;
  clear_has_cur_member();
}
inline ::google::protobuf::int32 GuildInfo::cur_member() const {
  return cur_member_;
}
inline void GuildInfo::set_cur_member(::google::protobuf::int32 value) {
  set_has_cur_member();
  cur_member_ = value;
}

// optional int32 max_member = 6;
inline bool GuildInfo::has_max_member() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildInfo::set_has_max_member() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildInfo::clear_has_max_member() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildInfo::clear_max_member() {
  max_member_ = 0;
  clear_has_max_member();
}
inline ::google::protobuf::int32 GuildInfo::max_member() const {
  return max_member_;
}
inline void GuildInfo::set_max_member(::google::protobuf::int32 value) {
  set_has_max_member();
  max_member_ = value;
}

// optional int32 require_level = 7;
inline bool GuildInfo::has_require_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildInfo::set_has_require_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildInfo::clear_has_require_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildInfo::clear_require_level() {
  require_level_ = 0;
  clear_has_require_level();
}
inline ::google::protobuf::int32 GuildInfo::require_level() const {
  return require_level_;
}
inline void GuildInfo::set_require_level(::google::protobuf::int32 value) {
  set_has_require_level();
  require_level_ = value;
}

// optional bool require_verify = 8;
inline bool GuildInfo::has_require_verify() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildInfo::set_has_require_verify() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildInfo::clear_has_require_verify() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildInfo::clear_require_verify() {
  require_verify_ = false;
  clear_has_require_verify();
}
inline bool GuildInfo::require_verify() const {
  return require_verify_;
}
inline void GuildInfo::set_require_verify(bool value) {
  set_has_require_verify();
  require_verify_ = value;
}

// optional string notice = 9;
inline bool GuildInfo::has_notice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildInfo::set_has_notice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildInfo::clear_has_notice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildInfo::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& GuildInfo::notice() const {
  return *notice_;
}
inline void GuildInfo::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void GuildInfo::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void GuildInfo::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInfo::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* GuildInfo::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildInfo::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 credits = 10;
inline bool GuildInfo::has_credits() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildInfo::set_has_credits() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildInfo::clear_has_credits() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildInfo::clear_credits() {
  credits_ = 0;
  clear_has_credits();
}
inline ::google::protobuf::int32 GuildInfo::credits() const {
  return credits_;
}
inline void GuildInfo::set_credits(::google::protobuf::int32 value) {
  set_has_credits();
  credits_ = value;
}

// optional int32 resource1 = 11;
inline bool GuildInfo::has_resource1() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildInfo::set_has_resource1() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildInfo::clear_has_resource1() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildInfo::clear_resource1() {
  resource1_ = 0;
  clear_has_resource1();
}
inline ::google::protobuf::int32 GuildInfo::resource1() const {
  return resource1_;
}
inline void GuildInfo::set_resource1(::google::protobuf::int32 value) {
  set_has_resource1();
  resource1_ = value;
}

// optional int32 resource2 = 12;
inline bool GuildInfo::has_resource2() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildInfo::set_has_resource2() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildInfo::clear_has_resource2() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildInfo::clear_resource2() {
  resource2_ = 0;
  clear_has_resource2();
}
inline ::google::protobuf::int32 GuildInfo::resource2() const {
  return resource2_;
}
inline void GuildInfo::set_resource2(::google::protobuf::int32 value) {
  set_has_resource2();
  resource2_ = value;
}

// -------------------------------------------------------------------

// GuildMemberInfo

// optional int32 charid = 1;
inline bool GuildMemberInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberInfo::clear_charid() {
  charid_ = 0;
  clear_has_charid();
}
inline ::google::protobuf::int32 GuildMemberInfo::charid() const {
  return charid_;
}
inline void GuildMemberInfo::set_charid(::google::protobuf::int32 value) {
  set_has_charid();
  charid_ = value;
}

// optional string name = 2;
inline bool GuildMemberInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildMemberInfo::name() const {
  return *name_;
}
inline void GuildMemberInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildMemberInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildMemberInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMemberInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GuildMemberInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMemberInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 race = 3;
inline bool GuildMemberInfo::has_race() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberInfo::set_has_race() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberInfo::clear_has_race() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberInfo::clear_race() {
  race_ = 0;
  clear_has_race();
}
inline ::google::protobuf::int32 GuildMemberInfo::race() const {
  return race_;
}
inline void GuildMemberInfo::set_race(::google::protobuf::int32 value) {
  set_has_race();
  race_ = value;
}

// optional int32 level = 4;
inline bool GuildMemberInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMemberInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMemberInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMemberInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildMemberInfo::level() const {
  return level_;
}
inline void GuildMemberInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional .Protocol.GuildTitle title = 5;
inline bool GuildMemberInfo::has_title() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildMemberInfo::set_has_title() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildMemberInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildMemberInfo::clear_title() {
  title_ = 0;
  clear_has_title();
}
inline ::Protocol::GuildTitle GuildMemberInfo::title() const {
  return static_cast< ::Protocol::GuildTitle >(title_);
}
inline void GuildMemberInfo::set_title(::Protocol::GuildTitle value) {
  assert(::Protocol::GuildTitle_IsValid(value));
  set_has_title();
  title_ = value;
}

// optional int32 credits = 6;
inline bool GuildMemberInfo::has_credits() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildMemberInfo::set_has_credits() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildMemberInfo::clear_has_credits() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildMemberInfo::clear_credits() {
  credits_ = 0;
  clear_has_credits();
}
inline ::google::protobuf::int32 GuildMemberInfo::credits() const {
  return credits_;
}
inline void GuildMemberInfo::set_credits(::google::protobuf::int32 value) {
  set_has_credits();
  credits_ = value;
}

// optional int32 total_credits = 7;
inline bool GuildMemberInfo::has_total_credits() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildMemberInfo::set_has_total_credits() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildMemberInfo::clear_has_total_credits() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildMemberInfo::clear_total_credits() {
  total_credits_ = 0;
  clear_has_total_credits();
}
inline ::google::protobuf::int32 GuildMemberInfo::total_credits() const {
  return total_credits_;
}
inline void GuildMemberInfo::set_total_credits(::google::protobuf::int32 value) {
  set_has_total_credits();
  total_credits_ = value;
}

// optional uint32 jointime = 8;
inline bool GuildMemberInfo::has_jointime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildMemberInfo::set_has_jointime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildMemberInfo::clear_has_jointime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildMemberInfo::clear_jointime() {
  jointime_ = 0u;
  clear_has_jointime();
}
inline ::google::protobuf::uint32 GuildMemberInfo::jointime() const {
  return jointime_;
}
inline void GuildMemberInfo::set_jointime(::google::protobuf::uint32 value) {
  set_has_jointime();
  jointime_ = value;
}

// optional bool online = 9;
inline bool GuildMemberInfo::has_online() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildMemberInfo::set_has_online() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildMemberInfo::clear_has_online() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildMemberInfo::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool GuildMemberInfo::online() const {
  return online_;
}
inline void GuildMemberInfo::set_online(bool value) {
  set_has_online();
  online_ = value;
}

// optional uint32 offlinetime = 10;
inline bool GuildMemberInfo::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildMemberInfo::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildMemberInfo::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildMemberInfo::clear_offlinetime() {
  offlinetime_ = 0u;
  clear_has_offlinetime();
}
inline ::google::protobuf::uint32 GuildMemberInfo::offlinetime() const {
  return offlinetime_;
}
inline void GuildMemberInfo::set_offlinetime(::google::protobuf::uint32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
}

// -------------------------------------------------------------------

// GuildSkillData

// optional int32 id = 1;
inline bool GuildSkillData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildSkillData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildSkillData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildSkillData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GuildSkillData::id() const {
  return id_;
}
inline void GuildSkillData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 level = 2;
inline bool GuildSkillData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildSkillData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildSkillData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildSkillData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildSkillData::level() const {
  return level_;
}
inline void GuildSkillData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// GuildApplyInfo

// optional int32 charid = 1;
inline bool GuildApplyInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildApplyInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildApplyInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildApplyInfo::clear_charid() {
  charid_ = 0;
  clear_has_charid();
}
inline ::google::protobuf::int32 GuildApplyInfo::charid() const {
  return charid_;
}
inline void GuildApplyInfo::set_charid(::google::protobuf::int32 value) {
  set_has_charid();
  charid_ = value;
}

// optional string name = 2;
inline bool GuildApplyInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildApplyInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildApplyInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildApplyInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildApplyInfo::name() const {
  return *name_;
}
inline void GuildApplyInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildApplyInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildApplyInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildApplyInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GuildApplyInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildApplyInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 race = 3;
inline bool GuildApplyInfo::has_race() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildApplyInfo::set_has_race() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildApplyInfo::clear_has_race() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildApplyInfo::clear_race() {
  race_ = 0;
  clear_has_race();
}
inline ::google::protobuf::int32 GuildApplyInfo::race() const {
  return race_;
}
inline void GuildApplyInfo::set_race(::google::protobuf::int32 value) {
  set_has_race();
  race_ = value;
}

// optional int32 level = 4;
inline bool GuildApplyInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildApplyInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildApplyInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildApplyInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildApplyInfo::level() const {
  return level_;
}
inline void GuildApplyInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// RequestCreateGuild

// optional string name = 1;
inline bool RequestCreateGuild::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestCreateGuild::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestCreateGuild::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestCreateGuild::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RequestCreateGuild::name() const {
  return *name_;
}
inline void RequestCreateGuild::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RequestCreateGuild::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RequestCreateGuild::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RequestCreateGuild::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RequestCreateGuild::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RequestCreateGuild::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ResponseCreateGuild

// optional int32 result = 1;
inline bool ResponseCreateGuild::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseCreateGuild::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseCreateGuild::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseCreateGuild::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseCreateGuild::result() const {
  return result_;
}
inline void ResponseCreateGuild::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string name = 2;
inline bool ResponseCreateGuild::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseCreateGuild::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseCreateGuild::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseCreateGuild::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ResponseCreateGuild::name() const {
  return *name_;
}
inline void ResponseCreateGuild::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResponseCreateGuild::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResponseCreateGuild::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResponseCreateGuild::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ResponseCreateGuild::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ResponseCreateGuild::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 max_member = 3;
inline bool ResponseCreateGuild::has_max_member() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponseCreateGuild::set_has_max_member() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponseCreateGuild::clear_has_max_member() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponseCreateGuild::clear_max_member() {
  max_member_ = 0;
  clear_has_max_member();
}
inline ::google::protobuf::int32 ResponseCreateGuild::max_member() const {
  return max_member_;
}
inline void ResponseCreateGuild::set_max_member(::google::protobuf::int32 value) {
  set_has_max_member();
  max_member_ = value;
}

// -------------------------------------------------------------------

// RequestGetGuildList

// optional int32 page = 1 [default = 1];
inline bool RequestGetGuildList::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGetGuildList::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGetGuildList::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGetGuildList::clear_page() {
  page_ = 1;
  clear_has_page();
}
inline ::google::protobuf::int32 RequestGetGuildList::page() const {
  return page_;
}
inline void RequestGetGuildList::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}

// -------------------------------------------------------------------

// ResponseGetGuildList

// optional int32 page = 1;
inline bool ResponseGetGuildList::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseGetGuildList::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseGetGuildList::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseGetGuildList::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 ResponseGetGuildList::page() const {
  return page_;
}
inline void ResponseGetGuildList::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}

// optional int32 max_page = 2;
inline bool ResponseGetGuildList::has_max_page() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseGetGuildList::set_has_max_page() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseGetGuildList::clear_has_max_page() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseGetGuildList::clear_max_page() {
  max_page_ = 0;
  clear_has_max_page();
}
inline ::google::protobuf::int32 ResponseGetGuildList::max_page() const {
  return max_page_;
}
inline void ResponseGetGuildList::set_max_page(::google::protobuf::int32 value) {
  set_has_max_page();
  max_page_ = value;
}

// repeated .Protocol.GuildInfo guild_list = 3;
inline int ResponseGetGuildList::guild_list_size() const {
  return guild_list_.size();
}
inline void ResponseGetGuildList::clear_guild_list() {
  guild_list_.Clear();
}
inline const ::Protocol::GuildInfo& ResponseGetGuildList::guild_list(int index) const {
  return guild_list_.Get(index);
}
inline ::Protocol::GuildInfo* ResponseGetGuildList::mutable_guild_list(int index) {
  return guild_list_.Mutable(index);
}
inline ::Protocol::GuildInfo* ResponseGetGuildList::add_guild_list() {
  return guild_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Protocol::GuildInfo >&
ResponseGetGuildList::guild_list() const {
  return guild_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Protocol::GuildInfo >*
ResponseGetGuildList::mutable_guild_list() {
  return &guild_list_;
}

// -------------------------------------------------------------------

// RequestGetGuildMemberList

// optional int32 reserve = 1;
inline bool RequestGetGuildMemberList::has_reserve() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGetGuildMemberList::set_has_reserve() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGetGuildMemberList::clear_has_reserve() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGetGuildMemberList::clear_reserve() {
  reserve_ = 0;
  clear_has_reserve();
}
inline ::google::protobuf::int32 RequestGetGuildMemberList::reserve() const {
  return reserve_;
}
inline void RequestGetGuildMemberList::set_reserve(::google::protobuf::int32 value) {
  set_has_reserve();
  reserve_ = value;
}

// -------------------------------------------------------------------

// ResponseGetGuildMemberList

// repeated .Protocol.GuildMemberInfo member_list = 1;
inline int ResponseGetGuildMemberList::member_list_size() const {
  return member_list_.size();
}
inline void ResponseGetGuildMemberList::clear_member_list() {
  member_list_.Clear();
}
inline const ::Protocol::GuildMemberInfo& ResponseGetGuildMemberList::member_list(int index) const {
  return member_list_.Get(index);
}
inline ::Protocol::GuildMemberInfo* ResponseGetGuildMemberList::mutable_member_list(int index) {
  return member_list_.Mutable(index);
}
inline ::Protocol::GuildMemberInfo* ResponseGetGuildMemberList::add_member_list() {
  return member_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Protocol::GuildMemberInfo >&
ResponseGetGuildMemberList::member_list() const {
  return member_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Protocol::GuildMemberInfo >*
ResponseGetGuildMemberList::mutable_member_list() {
  return &member_list_;
}

// -------------------------------------------------------------------

// RequestApplyJoinGuild

// optional string name = 1;
inline bool RequestApplyJoinGuild::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestApplyJoinGuild::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestApplyJoinGuild::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestApplyJoinGuild::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RequestApplyJoinGuild::name() const {
  return *name_;
}
inline void RequestApplyJoinGuild::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RequestApplyJoinGuild::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RequestApplyJoinGuild::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RequestApplyJoinGuild::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RequestApplyJoinGuild::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RequestApplyJoinGuild::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RequestInviteJoinGuild

// optional string charname = 1;
inline bool RequestInviteJoinGuild::has_charname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestInviteJoinGuild::set_has_charname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestInviteJoinGuild::clear_has_charname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestInviteJoinGuild::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RequestInviteJoinGuild::charname() const {
  return *charname_;
}
inline void RequestInviteJoinGuild::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void RequestInviteJoinGuild::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void RequestInviteJoinGuild::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RequestInviteJoinGuild::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* RequestInviteJoinGuild::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RequestInviteJoinGuild::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NotifyInviteJoinGuild

// optional string charname = 1;
inline bool NotifyInviteJoinGuild::has_charname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyInviteJoinGuild::set_has_charname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyInviteJoinGuild::clear_has_charname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyInviteJoinGuild::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& NotifyInviteJoinGuild::charname() const {
  return *charname_;
}
inline void NotifyInviteJoinGuild::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void NotifyInviteJoinGuild::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void NotifyInviteJoinGuild::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyInviteJoinGuild::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* NotifyInviteJoinGuild::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyInviteJoinGuild::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string guildname = 2;
inline bool NotifyInviteJoinGuild::has_guildname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyInviteJoinGuild::set_has_guildname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyInviteJoinGuild::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyInviteJoinGuild::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& NotifyInviteJoinGuild::guildname() const {
  return *guildname_;
}
inline void NotifyInviteJoinGuild::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void NotifyInviteJoinGuild::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void NotifyInviteJoinGuild::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyInviteJoinGuild::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  return guildname_;
}
inline ::std::string* NotifyInviteJoinGuild::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyInviteJoinGuild::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RequestInviteResult

// optional int32 agree = 1;
inline bool RequestInviteResult::has_agree() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestInviteResult::set_has_agree() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestInviteResult::clear_has_agree() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestInviteResult::clear_agree() {
  agree_ = 0;
  clear_has_agree();
}
inline ::google::protobuf::int32 RequestInviteResult::agree() const {
  return agree_;
}
inline void RequestInviteResult::set_agree(::google::protobuf::int32 value) {
  set_has_agree();
  agree_ = value;
}

// -------------------------------------------------------------------

// RequestGuildRemoveMember

// optional string name = 1;
inline bool RequestGuildRemoveMember::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGuildRemoveMember::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGuildRemoveMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGuildRemoveMember::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RequestGuildRemoveMember::name() const {
  return *name_;
}
inline void RequestGuildRemoveMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RequestGuildRemoveMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RequestGuildRemoveMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RequestGuildRemoveMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RequestGuildRemoveMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RequestGuildRemoveMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NotifyGuildRemoveMember

// optional string name = 1;
inline bool NotifyGuildRemoveMember::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGuildRemoveMember::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGuildRemoveMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGuildRemoveMember::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& NotifyGuildRemoveMember::name() const {
  return *name_;
}
inline void NotifyGuildRemoveMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void NotifyGuildRemoveMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void NotifyGuildRemoveMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyGuildRemoveMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* NotifyGuildRemoveMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyGuildRemoveMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NotifyGuildAddMember

// optional .Protocol.GuildMemberInfo member_info = 1;
inline bool NotifyGuildAddMember::has_member_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGuildAddMember::set_has_member_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGuildAddMember::clear_has_member_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGuildAddMember::clear_member_info() {
  if (member_info_ != NULL) member_info_->::Protocol::GuildMemberInfo::Clear();
  clear_has_member_info();
}
inline const ::Protocol::GuildMemberInfo& NotifyGuildAddMember::member_info() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return member_info_ != NULL ? *member_info_ : *default_instance().member_info_;
#else
  return member_info_ != NULL ? *member_info_ : *default_instance_->member_info_;
#endif
}
inline ::Protocol::GuildMemberInfo* NotifyGuildAddMember::mutable_member_info() {
  set_has_member_info();
  if (member_info_ == NULL) member_info_ = new ::Protocol::GuildMemberInfo;
  return member_info_;
}
inline ::Protocol::GuildMemberInfo* NotifyGuildAddMember::release_member_info() {
  clear_has_member_info();
  ::Protocol::GuildMemberInfo* temp = member_info_;
  member_info_ = NULL;
  return temp;
}
inline void NotifyGuildAddMember::set_allocated_member_info(::Protocol::GuildMemberInfo* member_info) {
  delete member_info_;
  member_info_ = member_info;
  if (member_info) {
    set_has_member_info();
  } else {
    clear_has_member_info();
  }
}

// -------------------------------------------------------------------

// RequestChangeGuildTitle

// optional string name = 1;
inline bool RequestChangeGuildTitle::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestChangeGuildTitle::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestChangeGuildTitle::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestChangeGuildTitle::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RequestChangeGuildTitle::name() const {
  return *name_;
}
inline void RequestChangeGuildTitle::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RequestChangeGuildTitle::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RequestChangeGuildTitle::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RequestChangeGuildTitle::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RequestChangeGuildTitle::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RequestChangeGuildTitle::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .Protocol.GuildTitle title = 2;
inline bool RequestChangeGuildTitle::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestChangeGuildTitle::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestChangeGuildTitle::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestChangeGuildTitle::clear_title() {
  title_ = 0;
  clear_has_title();
}
inline ::Protocol::GuildTitle RequestChangeGuildTitle::title() const {
  return static_cast< ::Protocol::GuildTitle >(title_);
}
inline void RequestChangeGuildTitle::set_title(::Protocol::GuildTitle value) {
  assert(::Protocol::GuildTitle_IsValid(value));
  set_has_title();
  title_ = value;
}

// -------------------------------------------------------------------

// NotifyChangeGuildTitle

// optional string name = 1;
inline bool NotifyChangeGuildTitle::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyChangeGuildTitle::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyChangeGuildTitle::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyChangeGuildTitle::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& NotifyChangeGuildTitle::name() const {
  return *name_;
}
inline void NotifyChangeGuildTitle::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void NotifyChangeGuildTitle::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void NotifyChangeGuildTitle::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyChangeGuildTitle::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* NotifyChangeGuildTitle::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyChangeGuildTitle::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .Protocol.GuildTitle title = 2;
inline bool NotifyChangeGuildTitle::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyChangeGuildTitle::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyChangeGuildTitle::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyChangeGuildTitle::clear_title() {
  title_ = 0;
  clear_has_title();
}
inline ::Protocol::GuildTitle NotifyChangeGuildTitle::title() const {
  return static_cast< ::Protocol::GuildTitle >(title_);
}
inline void NotifyChangeGuildTitle::set_title(::Protocol::GuildTitle value) {
  assert(::Protocol::GuildTitle_IsValid(value));
  set_has_title();
  title_ = value;
}

// -------------------------------------------------------------------

// RequestChangeGuildNotice

// optional string notice = 1;
inline bool RequestChangeGuildNotice::has_notice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestChangeGuildNotice::set_has_notice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestChangeGuildNotice::clear_has_notice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestChangeGuildNotice::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& RequestChangeGuildNotice::notice() const {
  return *notice_;
}
inline void RequestChangeGuildNotice::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void RequestChangeGuildNotice::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void RequestChangeGuildNotice::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RequestChangeGuildNotice::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* RequestChangeGuildNotice::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RequestChangeGuildNotice::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NotifyChangeGuildNotice

// optional string notice = 1;
inline bool NotifyChangeGuildNotice::has_notice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyChangeGuildNotice::set_has_notice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyChangeGuildNotice::clear_has_notice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyChangeGuildNotice::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& NotifyChangeGuildNotice::notice() const {
  return *notice_;
}
inline void NotifyChangeGuildNotice::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void NotifyChangeGuildNotice::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void NotifyChangeGuildNotice::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyChangeGuildNotice::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* NotifyChangeGuildNotice::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyChangeGuildNotice::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RequestChangeGuildRequire

// optional int32 require_level = 1;
inline bool RequestChangeGuildRequire::has_require_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestChangeGuildRequire::set_has_require_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestChangeGuildRequire::clear_has_require_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestChangeGuildRequire::clear_require_level() {
  require_level_ = 0;
  clear_has_require_level();
}
inline ::google::protobuf::int32 RequestChangeGuildRequire::require_level() const {
  return require_level_;
}
inline void RequestChangeGuildRequire::set_require_level(::google::protobuf::int32 value) {
  set_has_require_level();
  require_level_ = value;
}

// optional bool require_verify = 2;
inline bool RequestChangeGuildRequire::has_require_verify() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestChangeGuildRequire::set_has_require_verify() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestChangeGuildRequire::clear_has_require_verify() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestChangeGuildRequire::clear_require_verify() {
  require_verify_ = false;
  clear_has_require_verify();
}
inline bool RequestChangeGuildRequire::require_verify() const {
  return require_verify_;
}
inline void RequestChangeGuildRequire::set_require_verify(bool value) {
  set_has_require_verify();
  require_verify_ = value;
}

// -------------------------------------------------------------------

// ResponseChangeGuildRequire

// optional int32 result = 1;
inline bool ResponseChangeGuildRequire::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseChangeGuildRequire::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseChangeGuildRequire::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseChangeGuildRequire::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseChangeGuildRequire::result() const {
  return result_;
}
inline void ResponseChangeGuildRequire::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// NotifyUpdateGuildMember

// optional .Protocol.GuildMemberInfo info = 1;
inline bool NotifyUpdateGuildMember::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUpdateGuildMember::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUpdateGuildMember::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUpdateGuildMember::clear_info() {
  if (info_ != NULL) info_->::Protocol::GuildMemberInfo::Clear();
  clear_has_info();
}
inline const ::Protocol::GuildMemberInfo& NotifyUpdateGuildMember::info() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return info_ != NULL ? *info_ : *default_instance().info_;
#else
  return info_ != NULL ? *info_ : *default_instance_->info_;
#endif
}
inline ::Protocol::GuildMemberInfo* NotifyUpdateGuildMember::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Protocol::GuildMemberInfo;
  return info_;
}
inline ::Protocol::GuildMemberInfo* NotifyUpdateGuildMember::release_info() {
  clear_has_info();
  ::Protocol::GuildMemberInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void NotifyUpdateGuildMember::set_allocated_info(::Protocol::GuildMemberInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// RequestGetApplyList

// optional int32 reserve = 1;
inline bool RequestGetApplyList::has_reserve() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGetApplyList::set_has_reserve() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGetApplyList::clear_has_reserve() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGetApplyList::clear_reserve() {
  reserve_ = 0;
  clear_has_reserve();
}
inline ::google::protobuf::int32 RequestGetApplyList::reserve() const {
  return reserve_;
}
inline void RequestGetApplyList::set_reserve(::google::protobuf::int32 value) {
  set_has_reserve();
  reserve_ = value;
}

// -------------------------------------------------------------------

// ResponseGetApplyList

// repeated .Protocol.GuildApplyInfo apply_list = 1;
inline int ResponseGetApplyList::apply_list_size() const {
  return apply_list_.size();
}
inline void ResponseGetApplyList::clear_apply_list() {
  apply_list_.Clear();
}
inline const ::Protocol::GuildApplyInfo& ResponseGetApplyList::apply_list(int index) const {
  return apply_list_.Get(index);
}
inline ::Protocol::GuildApplyInfo* ResponseGetApplyList::mutable_apply_list(int index) {
  return apply_list_.Mutable(index);
}
inline ::Protocol::GuildApplyInfo* ResponseGetApplyList::add_apply_list() {
  return apply_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Protocol::GuildApplyInfo >&
ResponseGetApplyList::apply_list() const {
  return apply_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Protocol::GuildApplyInfo >*
ResponseGetApplyList::mutable_apply_list() {
  return &apply_list_;
}

// -------------------------------------------------------------------

// RequestProcessApply

// optional int32 charid = 1;
inline bool RequestProcessApply::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestProcessApply::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestProcessApply::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestProcessApply::clear_charid() {
  charid_ = 0;
  clear_has_charid();
}
inline ::google::protobuf::int32 RequestProcessApply::charid() const {
  return charid_;
}
inline void RequestProcessApply::set_charid(::google::protobuf::int32 value) {
  set_has_charid();
  charid_ = value;
}

// optional bool agree = 2;
inline bool RequestProcessApply::has_agree() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestProcessApply::set_has_agree() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestProcessApply::clear_has_agree() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestProcessApply::clear_agree() {
  agree_ = false;
  clear_has_agree();
}
inline bool RequestProcessApply::agree() const {
  return agree_;
}
inline void RequestProcessApply::set_agree(bool value) {
  set_has_agree();
  agree_ = value;
}

// -------------------------------------------------------------------

// RequestUpdateGuildInfo

// optional int32 reserve = 1;
inline bool RequestUpdateGuildInfo::has_reserve() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestUpdateGuildInfo::set_has_reserve() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestUpdateGuildInfo::clear_has_reserve() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestUpdateGuildInfo::clear_reserve() {
  reserve_ = 0;
  clear_has_reserve();
}
inline ::google::protobuf::int32 RequestUpdateGuildInfo::reserve() const {
  return reserve_;
}
inline void RequestUpdateGuildInfo::set_reserve(::google::protobuf::int32 value) {
  set_has_reserve();
  reserve_ = value;
}

// -------------------------------------------------------------------

// NotifyUpdateGuildInfo

// optional .Protocol.GuildInfo guild_info = 1;
inline bool NotifyUpdateGuildInfo::has_guild_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUpdateGuildInfo::set_has_guild_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUpdateGuildInfo::clear_has_guild_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUpdateGuildInfo::clear_guild_info() {
  if (guild_info_ != NULL) guild_info_->::Protocol::GuildInfo::Clear();
  clear_has_guild_info();
}
inline const ::Protocol::GuildInfo& NotifyUpdateGuildInfo::guild_info() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guild_info_ != NULL ? *guild_info_ : *default_instance().guild_info_;
#else
  return guild_info_ != NULL ? *guild_info_ : *default_instance_->guild_info_;
#endif
}
inline ::Protocol::GuildInfo* NotifyUpdateGuildInfo::mutable_guild_info() {
  set_has_guild_info();
  if (guild_info_ == NULL) guild_info_ = new ::Protocol::GuildInfo;
  return guild_info_;
}
inline ::Protocol::GuildInfo* NotifyUpdateGuildInfo::release_guild_info() {
  clear_has_guild_info();
  ::Protocol::GuildInfo* temp = guild_info_;
  guild_info_ = NULL;
  return temp;
}
inline void NotifyUpdateGuildInfo::set_allocated_guild_info(::Protocol::GuildInfo* guild_info) {
  delete guild_info_;
  guild_info_ = guild_info;
  if (guild_info) {
    set_has_guild_info();
  } else {
    clear_has_guild_info();
  }
}

// -------------------------------------------------------------------

// RequestGuildDonateResource

// optional int32 resource1 = 1;
inline bool RequestGuildDonateResource::has_resource1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGuildDonateResource::set_has_resource1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGuildDonateResource::clear_has_resource1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGuildDonateResource::clear_resource1() {
  resource1_ = 0;
  clear_has_resource1();
}
inline ::google::protobuf::int32 RequestGuildDonateResource::resource1() const {
  return resource1_;
}
inline void RequestGuildDonateResource::set_resource1(::google::protobuf::int32 value) {
  set_has_resource1();
  resource1_ = value;
}

// optional int32 resource2 = 2;
inline bool RequestGuildDonateResource::has_resource2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestGuildDonateResource::set_has_resource2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestGuildDonateResource::clear_has_resource2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestGuildDonateResource::clear_resource2() {
  resource2_ = 0;
  clear_has_resource2();
}
inline ::google::protobuf::int32 RequestGuildDonateResource::resource2() const {
  return resource2_;
}
inline void RequestGuildDonateResource::set_resource2(::google::protobuf::int32 value) {
  set_has_resource2();
  resource2_ = value;
}

// -------------------------------------------------------------------

// NotifyGuildDonateResource

// optional int32 result = 1;
inline bool NotifyGuildDonateResource::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGuildDonateResource::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGuildDonateResource::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGuildDonateResource::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 NotifyGuildDonateResource::result() const {
  return result_;
}
inline void NotifyGuildDonateResource::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// RequestGuildUpgrade

// optional int32 reserve = 1;
inline bool RequestGuildUpgrade::has_reserve() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGuildUpgrade::set_has_reserve() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGuildUpgrade::clear_has_reserve() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGuildUpgrade::clear_reserve() {
  reserve_ = 0;
  clear_has_reserve();
}
inline ::google::protobuf::int32 RequestGuildUpgrade::reserve() const {
  return reserve_;
}
inline void RequestGuildUpgrade::set_reserve(::google::protobuf::int32 value) {
  set_has_reserve();
  reserve_ = value;
}

// -------------------------------------------------------------------

// NotifyGuildUpgrade

// optional int32 result = 1;
inline bool NotifyGuildUpgrade::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGuildUpgrade::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGuildUpgrade::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGuildUpgrade::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 NotifyGuildUpgrade::result() const {
  return result_;
}
inline void NotifyGuildUpgrade::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// RequestGuildDevelopSkill

// optional int32 skill_id = 1;
inline bool RequestGuildDevelopSkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGuildDevelopSkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGuildDevelopSkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGuildDevelopSkill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 RequestGuildDevelopSkill::skill_id() const {
  return skill_id_;
}
inline void RequestGuildDevelopSkill::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional int32 skill_level = 2;
inline bool RequestGuildDevelopSkill::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestGuildDevelopSkill::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestGuildDevelopSkill::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestGuildDevelopSkill::clear_skill_level() {
  skill_level_ = 0;
  clear_has_skill_level();
}
inline ::google::protobuf::int32 RequestGuildDevelopSkill::skill_level() const {
  return skill_level_;
}
inline void RequestGuildDevelopSkill::set_skill_level(::google::protobuf::int32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// NotifyGuildDevelopSkill

// optional int32 result = 1;
inline bool NotifyGuildDevelopSkill::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGuildDevelopSkill::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGuildDevelopSkill::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGuildDevelopSkill::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 NotifyGuildDevelopSkill::result() const {
  return result_;
}
inline void NotifyGuildDevelopSkill::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 skill_id = 2;
inline bool NotifyGuildDevelopSkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGuildDevelopSkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGuildDevelopSkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGuildDevelopSkill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 NotifyGuildDevelopSkill::skill_id() const {
  return skill_id_;
}
inline void NotifyGuildDevelopSkill::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional int32 skill_level = 3;
inline bool NotifyGuildDevelopSkill::has_skill_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyGuildDevelopSkill::set_has_skill_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyGuildDevelopSkill::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyGuildDevelopSkill::clear_skill_level() {
  skill_level_ = 0;
  clear_has_skill_level();
}
inline ::google::protobuf::int32 NotifyGuildDevelopSkill::skill_level() const {
  return skill_level_;
}
inline void NotifyGuildDevelopSkill::set_skill_level(::google::protobuf::int32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// RequestGuildLearnSkill

// optional int32 skill_id = 1;
inline bool RequestGuildLearnSkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGuildLearnSkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGuildLearnSkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGuildLearnSkill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 RequestGuildLearnSkill::skill_id() const {
  return skill_id_;
}
inline void RequestGuildLearnSkill::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional int32 skill_level = 2;
inline bool RequestGuildLearnSkill::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestGuildLearnSkill::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestGuildLearnSkill::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestGuildLearnSkill::clear_skill_level() {
  skill_level_ = 0;
  clear_has_skill_level();
}
inline ::google::protobuf::int32 RequestGuildLearnSkill::skill_level() const {
  return skill_level_;
}
inline void RequestGuildLearnSkill::set_skill_level(::google::protobuf::int32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// ResponseGuildLearnSkill

// optional int32 result = 1;
inline bool ResponseGuildLearnSkill::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseGuildLearnSkill::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseGuildLearnSkill::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseGuildLearnSkill::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseGuildLearnSkill::result() const {
  return result_;
}
inline void ResponseGuildLearnSkill::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 skill_id = 2;
inline bool ResponseGuildLearnSkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseGuildLearnSkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseGuildLearnSkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseGuildLearnSkill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 ResponseGuildLearnSkill::skill_id() const {
  return skill_id_;
}
inline void ResponseGuildLearnSkill::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional int32 skill_level = 3;
inline bool ResponseGuildLearnSkill::has_skill_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponseGuildLearnSkill::set_has_skill_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponseGuildLearnSkill::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponseGuildLearnSkill::clear_skill_level() {
  skill_level_ = 0;
  clear_has_skill_level();
}
inline ::google::protobuf::int32 ResponseGuildLearnSkill::skill_level() const {
  return skill_level_;
}
inline void ResponseGuildLearnSkill::set_skill_level(::google::protobuf::int32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// RequestGetGuildSkill

// optional int32 reserve = 1;
inline bool RequestGetGuildSkill::has_reserve() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGetGuildSkill::set_has_reserve() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGetGuildSkill::clear_has_reserve() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGetGuildSkill::clear_reserve() {
  reserve_ = 0;
  clear_has_reserve();
}
inline ::google::protobuf::int32 RequestGetGuildSkill::reserve() const {
  return reserve_;
}
inline void RequestGetGuildSkill::set_reserve(::google::protobuf::int32 value) {
  set_has_reserve();
  reserve_ = value;
}

// -------------------------------------------------------------------

// NotifyGetGuildSkill

// repeated .Protocol.GuildSkillData skill_list = 1;
inline int NotifyGetGuildSkill::skill_list_size() const {
  return skill_list_.size();
}
inline void NotifyGetGuildSkill::clear_skill_list() {
  skill_list_.Clear();
}
inline const ::Protocol::GuildSkillData& NotifyGetGuildSkill::skill_list(int index) const {
  return skill_list_.Get(index);
}
inline ::Protocol::GuildSkillData* NotifyGetGuildSkill::mutable_skill_list(int index) {
  return skill_list_.Mutable(index);
}
inline ::Protocol::GuildSkillData* NotifyGetGuildSkill::add_skill_list() {
  return skill_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Protocol::GuildSkillData >&
NotifyGetGuildSkill::skill_list() const {
  return skill_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Protocol::GuildSkillData >*
NotifyGetGuildSkill::mutable_skill_list() {
  return &skill_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoGuild_2eproto__INCLUDED
