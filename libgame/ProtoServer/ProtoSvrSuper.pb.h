// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoSvrSuper.proto

#ifndef PROTOBUF_ProtoSvrSuper_2eproto__INCLUDED
#define PROTOBUF_ProtoSvrSuper_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "ProtoSvrServerData.pb.h"
// @@protoc_insertion_point(includes)

namespace SuperCmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoSvrSuper_2eproto();
void protobuf_AssignDesc_ProtoSvrSuper_2eproto();
void protobuf_ShutdownFile_ProtoSvrSuper_2eproto();

class MsgRegisterServer;
class MsgGetServerInfo;
class NotifyRefreshZoneInfo;
class MsgLoginSelectZone;
class MsgSuperSelectZone;
class MsgRecordCharToLoginDB;

enum SvrSuperOpCode {
  SUPER_OP_REGISTER_SERVER = 1,
  SUPER_OP_GET_SERVER_INFO = 2,
  SUPER_OP_REFRESH_ZONE_INFO = 3,
  SUPER_OP_LOGIN_SELECT_ZONE = 4,
  SUPER_OP_SUPER_SELECT_ZONE = 5,
  SUPER_OP_RECORD_CHAR_TO_LOGINDB = 6
};
bool SvrSuperOpCode_IsValid(int value);
const SvrSuperOpCode SvrSuperOpCode_MIN = SUPER_OP_REGISTER_SERVER;
const SvrSuperOpCode SvrSuperOpCode_MAX = SUPER_OP_RECORD_CHAR_TO_LOGINDB;
const int SvrSuperOpCode_ARRAYSIZE = SvrSuperOpCode_MAX + 1;

// ===================================================================

class MsgRegisterServer : public ::google::protobuf::MessageLite {
 public:
  MsgRegisterServer();
  virtual ~MsgRegisterServer();

  MsgRegisterServer(const MsgRegisterServer& from);

  inline MsgRegisterServer& operator=(const MsgRegisterServer& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgRegisterServer& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgRegisterServer* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgRegisterServer* other);

  // implements Message ----------------------------------------------

  MsgRegisterServer* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgRegisterServer& from);
  void MergeFrom(const MsgRegisterServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ServerInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::ServerInfo& info() const;
  inline ::ServerInfo* mutable_info();
  inline ::ServerInfo* release_info();
  inline void set_allocated_info(::ServerInfo* info);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SuperCmd.MsgRegisterServer)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_result();
  inline void clear_has_result();

  ::ServerInfo* info_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoSvrSuper_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrSuper_2eproto();

  void InitAsDefaultInstance();
  static MsgRegisterServer* default_instance_;
};
// -------------------------------------------------------------------

class MsgGetServerInfo : public ::google::protobuf::MessageLite {
 public:
  MsgGetServerInfo();
  virtual ~MsgGetServerInfo();

  MsgGetServerInfo(const MsgGetServerInfo& from);

  inline MsgGetServerInfo& operator=(const MsgGetServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgGetServerInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgGetServerInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgGetServerInfo* other);

  // implements Message ----------------------------------------------

  MsgGetServerInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgGetServerInfo& from);
  void MergeFrom(const MsgGetServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 flag = 2 [default = 1];
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // optional int32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ServerInfo server_list = 4;
  inline int server_list_size() const;
  inline void clear_server_list();
  static const int kServerListFieldNumber = 4;
  inline const ::ServerInfo& server_list(int index) const;
  inline ::ServerInfo* mutable_server_list(int index);
  inline ::ServerInfo* add_server_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ServerInfo >&
      server_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ServerInfo >*
      mutable_server_list();

  // @@protoc_insertion_point(class_scope:SuperCmd.MsgGetServerInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::RepeatedPtrField< ::ServerInfo > server_list_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoSvrSuper_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrSuper_2eproto();

  void InitAsDefaultInstance();
  static MsgGetServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRefreshZoneInfo : public ::google::protobuf::MessageLite {
 public:
  NotifyRefreshZoneInfo();
  virtual ~NotifyRefreshZoneInfo();

  NotifyRefreshZoneInfo(const NotifyRefreshZoneInfo& from);

  inline NotifyRefreshZoneInfo& operator=(const NotifyRefreshZoneInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const NotifyRefreshZoneInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyRefreshZoneInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyRefreshZoneInfo* other);

  // implements Message ----------------------------------------------

  NotifyRefreshZoneInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NotifyRefreshZoneInfo& from);
  void MergeFrom(const NotifyRefreshZoneInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ServerInfo server_list = 1;
  inline int server_list_size() const;
  inline void clear_server_list();
  static const int kServerListFieldNumber = 1;
  inline const ::ServerInfo& server_list(int index) const;
  inline ::ServerInfo* mutable_server_list(int index);
  inline ::ServerInfo* add_server_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ServerInfo >&
      server_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ServerInfo >*
      mutable_server_list();

  // @@protoc_insertion_point(class_scope:SuperCmd.NotifyRefreshZoneInfo)
 private:

  ::google::protobuf::RepeatedPtrField< ::ServerInfo > server_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoSvrSuper_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrSuper_2eproto();

  void InitAsDefaultInstance();
  static NotifyRefreshZoneInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginSelectZone : public ::google::protobuf::MessageLite {
 public:
  MsgLoginSelectZone();
  virtual ~MsgLoginSelectZone();

  MsgLoginSelectZone(const MsgLoginSelectZone& from);

  inline MsgLoginSelectZone& operator=(const MsgLoginSelectZone& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgLoginSelectZone& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgLoginSelectZone* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgLoginSelectZone* other);

  // implements Message ----------------------------------------------

  MsgLoginSelectZone* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgLoginSelectZone& from);
  void MergeFrom(const MsgLoginSelectZone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional uint32 login_key = 2;
  inline bool has_login_key() const;
  inline void clear_login_key();
  static const int kLoginKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 login_key() const;
  inline void set_login_key(::google::protobuf::uint32 value);

  // optional uint32 client_taskid = 3;
  inline bool has_client_taskid() const;
  inline void clear_client_taskid();
  static const int kClientTaskidFieldNumber = 3;
  inline ::google::protobuf::uint32 client_taskid() const;
  inline void set_client_taskid(::google::protobuf::uint32 value);

  // optional uint64 uniqueid = 4;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 4;
  inline ::google::protobuf::uint64 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::uint64 value);

  // optional uint32 result = 8;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 8;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint32 gateway_ip = 9;
  inline bool has_gateway_ip() const;
  inline void clear_gateway_ip();
  static const int kGatewayIpFieldNumber = 9;
  inline ::google::protobuf::uint32 gateway_ip() const;
  inline void set_gateway_ip(::google::protobuf::uint32 value);

  // optional uint32 gateway_port = 10;
  inline bool has_gateway_port() const;
  inline void clear_gateway_port();
  static const int kGatewayPortFieldNumber = 10;
  inline ::google::protobuf::uint32 gateway_port() const;
  inline void set_gateway_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SuperCmd.MsgLoginSelectZone)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_login_key();
  inline void clear_has_login_key();
  inline void set_has_client_taskid();
  inline void clear_has_client_taskid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gateway_ip();
  inline void clear_has_gateway_ip();
  inline void set_has_gateway_port();
  inline void clear_has_gateway_port();

  ::std::string* account_;
  ::google::protobuf::uint32 login_key_;
  ::google::protobuf::uint32 client_taskid_;
  ::google::protobuf::uint64 uniqueid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 gateway_ip_;
  ::google::protobuf::uint32 gateway_port_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoSvrSuper_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrSuper_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginSelectZone* default_instance_;
};
// -------------------------------------------------------------------

class MsgSuperSelectZone : public ::google::protobuf::MessageLite {
 public:
  MsgSuperSelectZone();
  virtual ~MsgSuperSelectZone();

  MsgSuperSelectZone(const MsgSuperSelectZone& from);

  inline MsgSuperSelectZone& operator=(const MsgSuperSelectZone& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgSuperSelectZone& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgSuperSelectZone* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgSuperSelectZone* other);

  // implements Message ----------------------------------------------

  MsgSuperSelectZone* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgSuperSelectZone& from);
  void MergeFrom(const MsgSuperSelectZone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional uint32 login_key = 2;
  inline bool has_login_key() const;
  inline void clear_login_key();
  static const int kLoginKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 login_key() const;
  inline void set_login_key(::google::protobuf::uint32 value);

  // optional uint32 client_taskid = 3;
  inline bool has_client_taskid() const;
  inline void clear_client_taskid();
  static const int kClientTaskidFieldNumber = 3;
  inline ::google::protobuf::uint32 client_taskid() const;
  inline void set_client_taskid(::google::protobuf::uint32 value);

  // optional uint64 login_server_uid = 4;
  inline bool has_login_server_uid() const;
  inline void clear_login_server_uid();
  static const int kLoginServerUidFieldNumber = 4;
  inline ::google::protobuf::uint64 login_server_uid() const;
  inline void set_login_server_uid(::google::protobuf::uint64 value);

  // optional uint32 result = 8;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 8;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint32 gateway_ip = 9;
  inline bool has_gateway_ip() const;
  inline void clear_gateway_ip();
  static const int kGatewayIpFieldNumber = 9;
  inline ::google::protobuf::uint32 gateway_ip() const;
  inline void set_gateway_ip(::google::protobuf::uint32 value);

  // optional uint32 gateway_port = 10;
  inline bool has_gateway_port() const;
  inline void clear_gateway_port();
  static const int kGatewayPortFieldNumber = 10;
  inline ::google::protobuf::uint32 gateway_port() const;
  inline void set_gateway_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SuperCmd.MsgSuperSelectZone)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_login_key();
  inline void clear_has_login_key();
  inline void set_has_client_taskid();
  inline void clear_has_client_taskid();
  inline void set_has_login_server_uid();
  inline void clear_has_login_server_uid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gateway_ip();
  inline void clear_has_gateway_ip();
  inline void set_has_gateway_port();
  inline void clear_has_gateway_port();

  ::std::string* account_;
  ::google::protobuf::uint32 login_key_;
  ::google::protobuf::uint32 client_taskid_;
  ::google::protobuf::uint64 login_server_uid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 gateway_ip_;
  ::google::protobuf::uint32 gateway_port_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoSvrSuper_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrSuper_2eproto();

  void InitAsDefaultInstance();
  static MsgSuperSelectZone* default_instance_;
};
// -------------------------------------------------------------------

class MsgRecordCharToLoginDB : public ::google::protobuf::MessageLite {
 public:
  MsgRecordCharToLoginDB();
  virtual ~MsgRecordCharToLoginDB();

  MsgRecordCharToLoginDB(const MsgRecordCharToLoginDB& from);

  inline MsgRecordCharToLoginDB& operator=(const MsgRecordCharToLoginDB& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgRecordCharToLoginDB& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgRecordCharToLoginDB* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgRecordCharToLoginDB* other);

  // implements Message ----------------------------------------------

  MsgRecordCharToLoginDB* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgRecordCharToLoginDB& from);
  void MergeFrom(const MsgRecordCharToLoginDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SvrZoneCharInfo char_info = 1;
  inline bool has_char_info() const;
  inline void clear_char_info();
  static const int kCharInfoFieldNumber = 1;
  inline const ::SvrZoneCharInfo& char_info() const;
  inline ::SvrZoneCharInfo* mutable_char_info();
  inline ::SvrZoneCharInfo* release_char_info();
  inline void set_allocated_char_info(::SvrZoneCharInfo* char_info);

  // @@protoc_insertion_point(class_scope:SuperCmd.MsgRecordCharToLoginDB)
 private:
  inline void set_has_char_info();
  inline void clear_has_char_info();

  ::SvrZoneCharInfo* char_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ProtoSvrSuper_2eproto();
  #endif
  friend void protobuf_AssignDesc_ProtoSvrSuper_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrSuper_2eproto();

  void InitAsDefaultInstance();
  static MsgRecordCharToLoginDB* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgRegisterServer

// optional .ServerInfo info = 1;
inline bool MsgRegisterServer::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRegisterServer::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRegisterServer::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRegisterServer::clear_info() {
  if (info_ != NULL) info_->::ServerInfo::Clear();
  clear_has_info();
}
inline const ::ServerInfo& MsgRegisterServer::info() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return info_ != NULL ? *info_ : *default_instance().info_;
#else
  return info_ != NULL ? *info_ : *default_instance_->info_;
#endif
}
inline ::ServerInfo* MsgRegisterServer::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ServerInfo;
  return info_;
}
inline ::ServerInfo* MsgRegisterServer::release_info() {
  clear_has_info();
  ::ServerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void MsgRegisterServer::set_allocated_info(::ServerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// optional int32 result = 2;
inline bool MsgRegisterServer::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgRegisterServer::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgRegisterServer::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgRegisterServer::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MsgRegisterServer::result() const {
  return result_;
}
inline void MsgRegisterServer::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MsgGetServerInfo

// optional uint32 type = 1;
inline bool MsgGetServerInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGetServerInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGetServerInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGetServerInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MsgGetServerInfo::type() const {
  return type_;
}
inline void MsgGetServerInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 flag = 2 [default = 1];
inline bool MsgGetServerInfo::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgGetServerInfo::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgGetServerInfo::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgGetServerInfo::clear_flag() {
  flag_ = 1u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 MsgGetServerInfo::flag() const {
  return flag_;
}
inline void MsgGetServerInfo::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
}

// optional int32 result = 3;
inline bool MsgGetServerInfo::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgGetServerInfo::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgGetServerInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgGetServerInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MsgGetServerInfo::result() const {
  return result_;
}
inline void MsgGetServerInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ServerInfo server_list = 4;
inline int MsgGetServerInfo::server_list_size() const {
  return server_list_.size();
}
inline void MsgGetServerInfo::clear_server_list() {
  server_list_.Clear();
}
inline const ::ServerInfo& MsgGetServerInfo::server_list(int index) const {
  return server_list_.Get(index);
}
inline ::ServerInfo* MsgGetServerInfo::mutable_server_list(int index) {
  return server_list_.Mutable(index);
}
inline ::ServerInfo* MsgGetServerInfo::add_server_list() {
  return server_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerInfo >&
MsgGetServerInfo::server_list() const {
  return server_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ServerInfo >*
MsgGetServerInfo::mutable_server_list() {
  return &server_list_;
}

// -------------------------------------------------------------------

// NotifyRefreshZoneInfo

// repeated .ServerInfo server_list = 1;
inline int NotifyRefreshZoneInfo::server_list_size() const {
  return server_list_.size();
}
inline void NotifyRefreshZoneInfo::clear_server_list() {
  server_list_.Clear();
}
inline const ::ServerInfo& NotifyRefreshZoneInfo::server_list(int index) const {
  return server_list_.Get(index);
}
inline ::ServerInfo* NotifyRefreshZoneInfo::mutable_server_list(int index) {
  return server_list_.Mutable(index);
}
inline ::ServerInfo* NotifyRefreshZoneInfo::add_server_list() {
  return server_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerInfo >&
NotifyRefreshZoneInfo::server_list() const {
  return server_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ServerInfo >*
NotifyRefreshZoneInfo::mutable_server_list() {
  return &server_list_;
}

// -------------------------------------------------------------------

// MsgLoginSelectZone

// optional string account = 1;
inline bool MsgLoginSelectZone::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginSelectZone::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginSelectZone::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginSelectZone::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MsgLoginSelectZone::account() const {
  return *account_;
}
inline void MsgLoginSelectZone::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MsgLoginSelectZone::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MsgLoginSelectZone::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgLoginSelectZone::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* MsgLoginSelectZone::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgLoginSelectZone::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 login_key = 2;
inline bool MsgLoginSelectZone::has_login_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginSelectZone::set_has_login_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginSelectZone::clear_has_login_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginSelectZone::clear_login_key() {
  login_key_ = 0u;
  clear_has_login_key();
}
inline ::google::protobuf::uint32 MsgLoginSelectZone::login_key() const {
  return login_key_;
}
inline void MsgLoginSelectZone::set_login_key(::google::protobuf::uint32 value) {
  set_has_login_key();
  login_key_ = value;
}

// optional uint32 client_taskid = 3;
inline bool MsgLoginSelectZone::has_client_taskid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgLoginSelectZone::set_has_client_taskid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgLoginSelectZone::clear_has_client_taskid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgLoginSelectZone::clear_client_taskid() {
  client_taskid_ = 0u;
  clear_has_client_taskid();
}
inline ::google::protobuf::uint32 MsgLoginSelectZone::client_taskid() const {
  return client_taskid_;
}
inline void MsgLoginSelectZone::set_client_taskid(::google::protobuf::uint32 value) {
  set_has_client_taskid();
  client_taskid_ = value;
}

// optional uint64 uniqueid = 4;
inline bool MsgLoginSelectZone::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgLoginSelectZone::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgLoginSelectZone::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgLoginSelectZone::clear_uniqueid() {
  uniqueid_ = GOOGLE_ULONGLONG(0);
  clear_has_uniqueid();
}
inline ::google::protobuf::uint64 MsgLoginSelectZone::uniqueid() const {
  return uniqueid_;
}
inline void MsgLoginSelectZone::set_uniqueid(::google::protobuf::uint64 value) {
  set_has_uniqueid();
  uniqueid_ = value;
}

// optional uint32 result = 8;
inline bool MsgLoginSelectZone::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgLoginSelectZone::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgLoginSelectZone::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgLoginSelectZone::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 MsgLoginSelectZone::result() const {
  return result_;
}
inline void MsgLoginSelectZone::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional uint32 gateway_ip = 9;
inline bool MsgLoginSelectZone::has_gateway_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgLoginSelectZone::set_has_gateway_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgLoginSelectZone::clear_has_gateway_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgLoginSelectZone::clear_gateway_ip() {
  gateway_ip_ = 0u;
  clear_has_gateway_ip();
}
inline ::google::protobuf::uint32 MsgLoginSelectZone::gateway_ip() const {
  return gateway_ip_;
}
inline void MsgLoginSelectZone::set_gateway_ip(::google::protobuf::uint32 value) {
  set_has_gateway_ip();
  gateway_ip_ = value;
}

// optional uint32 gateway_port = 10;
inline bool MsgLoginSelectZone::has_gateway_port() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgLoginSelectZone::set_has_gateway_port() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgLoginSelectZone::clear_has_gateway_port() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgLoginSelectZone::clear_gateway_port() {
  gateway_port_ = 0u;
  clear_has_gateway_port();
}
inline ::google::protobuf::uint32 MsgLoginSelectZone::gateway_port() const {
  return gateway_port_;
}
inline void MsgLoginSelectZone::set_gateway_port(::google::protobuf::uint32 value) {
  set_has_gateway_port();
  gateway_port_ = value;
}

// -------------------------------------------------------------------

// MsgSuperSelectZone

// optional string account = 1;
inline bool MsgSuperSelectZone::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSuperSelectZone::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSuperSelectZone::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSuperSelectZone::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MsgSuperSelectZone::account() const {
  return *account_;
}
inline void MsgSuperSelectZone::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MsgSuperSelectZone::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MsgSuperSelectZone::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSuperSelectZone::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* MsgSuperSelectZone::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSuperSelectZone::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 login_key = 2;
inline bool MsgSuperSelectZone::has_login_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSuperSelectZone::set_has_login_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSuperSelectZone::clear_has_login_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSuperSelectZone::clear_login_key() {
  login_key_ = 0u;
  clear_has_login_key();
}
inline ::google::protobuf::uint32 MsgSuperSelectZone::login_key() const {
  return login_key_;
}
inline void MsgSuperSelectZone::set_login_key(::google::protobuf::uint32 value) {
  set_has_login_key();
  login_key_ = value;
}

// optional uint32 client_taskid = 3;
inline bool MsgSuperSelectZone::has_client_taskid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgSuperSelectZone::set_has_client_taskid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgSuperSelectZone::clear_has_client_taskid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgSuperSelectZone::clear_client_taskid() {
  client_taskid_ = 0u;
  clear_has_client_taskid();
}
inline ::google::protobuf::uint32 MsgSuperSelectZone::client_taskid() const {
  return client_taskid_;
}
inline void MsgSuperSelectZone::set_client_taskid(::google::protobuf::uint32 value) {
  set_has_client_taskid();
  client_taskid_ = value;
}

// optional uint64 login_server_uid = 4;
inline bool MsgSuperSelectZone::has_login_server_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgSuperSelectZone::set_has_login_server_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgSuperSelectZone::clear_has_login_server_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgSuperSelectZone::clear_login_server_uid() {
  login_server_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_login_server_uid();
}
inline ::google::protobuf::uint64 MsgSuperSelectZone::login_server_uid() const {
  return login_server_uid_;
}
inline void MsgSuperSelectZone::set_login_server_uid(::google::protobuf::uint64 value) {
  set_has_login_server_uid();
  login_server_uid_ = value;
}

// optional uint32 result = 8;
inline bool MsgSuperSelectZone::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgSuperSelectZone::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgSuperSelectZone::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgSuperSelectZone::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 MsgSuperSelectZone::result() const {
  return result_;
}
inline void MsgSuperSelectZone::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional uint32 gateway_ip = 9;
inline bool MsgSuperSelectZone::has_gateway_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgSuperSelectZone::set_has_gateway_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgSuperSelectZone::clear_has_gateway_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgSuperSelectZone::clear_gateway_ip() {
  gateway_ip_ = 0u;
  clear_has_gateway_ip();
}
inline ::google::protobuf::uint32 MsgSuperSelectZone::gateway_ip() const {
  return gateway_ip_;
}
inline void MsgSuperSelectZone::set_gateway_ip(::google::protobuf::uint32 value) {
  set_has_gateway_ip();
  gateway_ip_ = value;
}

// optional uint32 gateway_port = 10;
inline bool MsgSuperSelectZone::has_gateway_port() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgSuperSelectZone::set_has_gateway_port() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgSuperSelectZone::clear_has_gateway_port() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgSuperSelectZone::clear_gateway_port() {
  gateway_port_ = 0u;
  clear_has_gateway_port();
}
inline ::google::protobuf::uint32 MsgSuperSelectZone::gateway_port() const {
  return gateway_port_;
}
inline void MsgSuperSelectZone::set_gateway_port(::google::protobuf::uint32 value) {
  set_has_gateway_port();
  gateway_port_ = value;
}

// -------------------------------------------------------------------

// MsgRecordCharToLoginDB

// optional .SvrZoneCharInfo char_info = 1;
inline bool MsgRecordCharToLoginDB::has_char_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRecordCharToLoginDB::set_has_char_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRecordCharToLoginDB::clear_has_char_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRecordCharToLoginDB::clear_char_info() {
  if (char_info_ != NULL) char_info_->::SvrZoneCharInfo::Clear();
  clear_has_char_info();
}
inline const ::SvrZoneCharInfo& MsgRecordCharToLoginDB::char_info() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return char_info_ != NULL ? *char_info_ : *default_instance().char_info_;
#else
  return char_info_ != NULL ? *char_info_ : *default_instance_->char_info_;
#endif
}
inline ::SvrZoneCharInfo* MsgRecordCharToLoginDB::mutable_char_info() {
  set_has_char_info();
  if (char_info_ == NULL) char_info_ = new ::SvrZoneCharInfo;
  return char_info_;
}
inline ::SvrZoneCharInfo* MsgRecordCharToLoginDB::release_char_info() {
  clear_has_char_info();
  ::SvrZoneCharInfo* temp = char_info_;
  char_info_ = NULL;
  return temp;
}
inline void MsgRecordCharToLoginDB::set_allocated_char_info(::SvrZoneCharInfo* char_info) {
  delete char_info_;
  char_info_ = char_info;
  if (char_info) {
    set_has_char_info();
  } else {
    clear_has_char_info();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SuperCmd

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoSvrSuper_2eproto__INCLUDED
