// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoSvrZone.proto

#ifndef PROTOBUF_ProtoSvrZone_2eproto__INCLUDED
#define PROTOBUF_ProtoSvrZone_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoSvrServerData.pb.h"
// @@protoc_insertion_point(includes)

namespace ZoneCmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoSvrZone_2eproto();
void protobuf_AssignDesc_ProtoSvrZone_2eproto();
void protobuf_ShutdownFile_ProtoSvrZone_2eproto();

class MsgRegisterServer;
class MsgGetServerInfo;
class MsgUserSelectZone;
class MsgRecordCharToLoginDB;
class NotifyUpdateServerInfo;
class MsgKickGatewayUser;
class MsgUnregZoneUser;

enum SvrZoneOpCode {
  ZONE_OP_REGISTER_SERVER = 1,
  ZONE_OP_GET_SERVER_INFO = 2,
  ZONE_OP_USER_SELECT_ZONE = 3,
  ZONE_OP_RECORD_CHAR_TO_LOGINDB = 4,
  ZONE_OP_UPDATE_SERVER_INFO = 5,
  ZONE_OP_KICK_USER = 6,
  ZONE_OP_UNREG_ZONEUSER = 7
};
bool SvrZoneOpCode_IsValid(int value);
const SvrZoneOpCode SvrZoneOpCode_MIN = ZONE_OP_REGISTER_SERVER;
const SvrZoneOpCode SvrZoneOpCode_MAX = ZONE_OP_UNREG_ZONEUSER;
const int SvrZoneOpCode_ARRAYSIZE = SvrZoneOpCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SvrZoneOpCode_descriptor();
inline const ::std::string& SvrZoneOpCode_Name(SvrZoneOpCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SvrZoneOpCode_descriptor(), value);
}
inline bool SvrZoneOpCode_Parse(
    const ::std::string& name, SvrZoneOpCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SvrZoneOpCode>(
    SvrZoneOpCode_descriptor(), name, value);
}
// ===================================================================

class MsgRegisterServer : public ::google::protobuf::Message {
 public:
  MsgRegisterServer();
  virtual ~MsgRegisterServer();

  MsgRegisterServer(const MsgRegisterServer& from);

  inline MsgRegisterServer& operator=(const MsgRegisterServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRegisterServer& default_instance();

  void Swap(MsgRegisterServer* other);

  // implements Message ----------------------------------------------

  MsgRegisterServer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRegisterServer& from);
  void MergeFrom(const MsgRegisterServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ServerInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::ServerInfo& info() const;
  inline ::ServerInfo* mutable_info();
  inline ::ServerInfo* release_info();
  inline void set_allocated_info(::ServerInfo* info);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZoneCmd.MsgRegisterServer)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ServerInfo* info_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoSvrZone_2eproto();
  friend void protobuf_AssignDesc_ProtoSvrZone_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrZone_2eproto();

  void InitAsDefaultInstance();
  static MsgRegisterServer* default_instance_;
};
// -------------------------------------------------------------------

class MsgGetServerInfo : public ::google::protobuf::Message {
 public:
  MsgGetServerInfo();
  virtual ~MsgGetServerInfo();

  MsgGetServerInfo(const MsgGetServerInfo& from);

  inline MsgGetServerInfo& operator=(const MsgGetServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetServerInfo& default_instance();

  void Swap(MsgGetServerInfo* other);

  // implements Message ----------------------------------------------

  MsgGetServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGetServerInfo& from);
  void MergeFrom(const MsgGetServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 flag = 2 [default = 1];
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // optional int32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ServerInfo server_list = 4;
  inline int server_list_size() const;
  inline void clear_server_list();
  static const int kServerListFieldNumber = 4;
  inline const ::ServerInfo& server_list(int index) const;
  inline ::ServerInfo* mutable_server_list(int index);
  inline ::ServerInfo* add_server_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ServerInfo >&
      server_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ServerInfo >*
      mutable_server_list();

  // @@protoc_insertion_point(class_scope:ZoneCmd.MsgGetServerInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::RepeatedPtrField< ::ServerInfo > server_list_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoSvrZone_2eproto();
  friend void protobuf_AssignDesc_ProtoSvrZone_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrZone_2eproto();

  void InitAsDefaultInstance();
  static MsgGetServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgUserSelectZone : public ::google::protobuf::Message {
 public:
  MsgUserSelectZone();
  virtual ~MsgUserSelectZone();

  MsgUserSelectZone(const MsgUserSelectZone& from);

  inline MsgUserSelectZone& operator=(const MsgUserSelectZone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUserSelectZone& default_instance();

  void Swap(MsgUserSelectZone* other);

  // implements Message ----------------------------------------------

  MsgUserSelectZone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUserSelectZone& from);
  void MergeFrom(const MsgUserSelectZone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional uint32 login_key = 2;
  inline bool has_login_key() const;
  inline void clear_login_key();
  static const int kLoginKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 login_key() const;
  inline void set_login_key(::google::protobuf::uint32 value);

  // optional uint32 client_taskid = 3;
  inline bool has_client_taskid() const;
  inline void clear_client_taskid();
  static const int kClientTaskidFieldNumber = 3;
  inline ::google::protobuf::uint32 client_taskid() const;
  inline void set_client_taskid(::google::protobuf::uint32 value);

  // optional uint64 login_server_uid = 4;
  inline bool has_login_server_uid() const;
  inline void clear_login_server_uid();
  static const int kLoginServerUidFieldNumber = 4;
  inline ::google::protobuf::uint64 login_server_uid() const;
  inline void set_login_server_uid(::google::protobuf::uint64 value);

  // optional int32 result = 5;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint32 gateway_ip = 6;
  inline bool has_gateway_ip() const;
  inline void clear_gateway_ip();
  static const int kGatewayIpFieldNumber = 6;
  inline ::google::protobuf::uint32 gateway_ip() const;
  inline void set_gateway_ip(::google::protobuf::uint32 value);

  // optional uint32 gateway_port = 7;
  inline bool has_gateway_port() const;
  inline void clear_gateway_port();
  static const int kGatewayPortFieldNumber = 7;
  inline ::google::protobuf::uint32 gateway_port() const;
  inline void set_gateway_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ZoneCmd.MsgUserSelectZone)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_login_key();
  inline void clear_has_login_key();
  inline void set_has_client_taskid();
  inline void clear_has_client_taskid();
  inline void set_has_login_server_uid();
  inline void clear_has_login_server_uid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gateway_ip();
  inline void clear_has_gateway_ip();
  inline void set_has_gateway_port();
  inline void clear_has_gateway_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::uint32 login_key_;
  ::google::protobuf::uint32 client_taskid_;
  ::google::protobuf::uint64 login_server_uid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 gateway_ip_;
  ::google::protobuf::uint32 gateway_port_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoSvrZone_2eproto();
  friend void protobuf_AssignDesc_ProtoSvrZone_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrZone_2eproto();

  void InitAsDefaultInstance();
  static MsgUserSelectZone* default_instance_;
};
// -------------------------------------------------------------------

class MsgRecordCharToLoginDB : public ::google::protobuf::Message {
 public:
  MsgRecordCharToLoginDB();
  virtual ~MsgRecordCharToLoginDB();

  MsgRecordCharToLoginDB(const MsgRecordCharToLoginDB& from);

  inline MsgRecordCharToLoginDB& operator=(const MsgRecordCharToLoginDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRecordCharToLoginDB& default_instance();

  void Swap(MsgRecordCharToLoginDB* other);

  // implements Message ----------------------------------------------

  MsgRecordCharToLoginDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRecordCharToLoginDB& from);
  void MergeFrom(const MsgRecordCharToLoginDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SvrZoneCharInfo char_info = 1;
  inline bool has_char_info() const;
  inline void clear_char_info();
  static const int kCharInfoFieldNumber = 1;
  inline const ::SvrZoneCharInfo& char_info() const;
  inline ::SvrZoneCharInfo* mutable_char_info();
  inline ::SvrZoneCharInfo* release_char_info();
  inline void set_allocated_char_info(::SvrZoneCharInfo* char_info);

  // @@protoc_insertion_point(class_scope:ZoneCmd.MsgRecordCharToLoginDB)
 private:
  inline void set_has_char_info();
  inline void clear_has_char_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SvrZoneCharInfo* char_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoSvrZone_2eproto();
  friend void protobuf_AssignDesc_ProtoSvrZone_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrZone_2eproto();

  void InitAsDefaultInstance();
  static MsgRecordCharToLoginDB* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUpdateServerInfo : public ::google::protobuf::Message {
 public:
  NotifyUpdateServerInfo();
  virtual ~NotifyUpdateServerInfo();

  NotifyUpdateServerInfo(const NotifyUpdateServerInfo& from);

  inline NotifyUpdateServerInfo& operator=(const NotifyUpdateServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUpdateServerInfo& default_instance();

  void Swap(NotifyUpdateServerInfo* other);

  // implements Message ----------------------------------------------

  NotifyUpdateServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUpdateServerInfo& from);
  void MergeFrom(const NotifyUpdateServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 server_uid = 1;
  inline bool has_server_uid() const;
  inline void clear_server_uid();
  static const int kServerUidFieldNumber = 1;
  inline ::google::protobuf::uint64 server_uid() const;
  inline void set_server_uid(::google::protobuf::uint64 value);

  // optional int32 onlinenum = 2;
  inline bool has_onlinenum() const;
  inline void clear_onlinenum();
  static const int kOnlinenumFieldNumber = 2;
  inline ::google::protobuf::int32 onlinenum() const;
  inline void set_onlinenum(::google::protobuf::int32 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZoneCmd.NotifyUpdateServerInfo)
 private:
  inline void set_has_server_uid();
  inline void clear_has_server_uid();
  inline void set_has_onlinenum();
  inline void clear_has_onlinenum();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 server_uid_;
  ::google::protobuf::int32 onlinenum_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoSvrZone_2eproto();
  friend void protobuf_AssignDesc_ProtoSvrZone_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrZone_2eproto();

  void InitAsDefaultInstance();
  static NotifyUpdateServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgKickGatewayUser : public ::google::protobuf::Message {
 public:
  MsgKickGatewayUser();
  virtual ~MsgKickGatewayUser();

  MsgKickGatewayUser(const MsgKickGatewayUser& from);

  inline MsgKickGatewayUser& operator=(const MsgKickGatewayUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgKickGatewayUser& default_instance();

  void Swap(MsgKickGatewayUser* other);

  // implements Message ----------------------------------------------

  MsgKickGatewayUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgKickGatewayUser& from);
  void MergeFrom(const MsgKickGatewayUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZoneCmd.MsgKickGatewayUser)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoSvrZone_2eproto();
  friend void protobuf_AssignDesc_ProtoSvrZone_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrZone_2eproto();

  void InitAsDefaultInstance();
  static MsgKickGatewayUser* default_instance_;
};
// -------------------------------------------------------------------

class MsgUnregZoneUser : public ::google::protobuf::Message {
 public:
  MsgUnregZoneUser();
  virtual ~MsgUnregZoneUser();

  MsgUnregZoneUser(const MsgUnregZoneUser& from);

  inline MsgUnregZoneUser& operator=(const MsgUnregZoneUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUnregZoneUser& default_instance();

  void Swap(MsgUnregZoneUser* other);

  // implements Message ----------------------------------------------

  MsgUnregZoneUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUnregZoneUser& from);
  void MergeFrom(const MsgUnregZoneUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZoneCmd.MsgUnregZoneUser)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoSvrZone_2eproto();
  friend void protobuf_AssignDesc_ProtoSvrZone_2eproto();
  friend void protobuf_ShutdownFile_ProtoSvrZone_2eproto();

  void InitAsDefaultInstance();
  static MsgUnregZoneUser* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgRegisterServer

// optional .ServerInfo info = 1;
inline bool MsgRegisterServer::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRegisterServer::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRegisterServer::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRegisterServer::clear_info() {
  if (info_ != NULL) info_->::ServerInfo::Clear();
  clear_has_info();
}
inline const ::ServerInfo& MsgRegisterServer::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::ServerInfo* MsgRegisterServer::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::ServerInfo;
  return info_;
}
inline ::ServerInfo* MsgRegisterServer::release_info() {
  clear_has_info();
  ::ServerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void MsgRegisterServer::set_allocated_info(::ServerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// optional int32 result = 2;
inline bool MsgRegisterServer::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgRegisterServer::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgRegisterServer::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgRegisterServer::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MsgRegisterServer::result() const {
  return result_;
}
inline void MsgRegisterServer::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MsgGetServerInfo

// optional uint32 type = 1;
inline bool MsgGetServerInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGetServerInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGetServerInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGetServerInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MsgGetServerInfo::type() const {
  return type_;
}
inline void MsgGetServerInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 flag = 2 [default = 1];
inline bool MsgGetServerInfo::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgGetServerInfo::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgGetServerInfo::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgGetServerInfo::clear_flag() {
  flag_ = 1u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 MsgGetServerInfo::flag() const {
  return flag_;
}
inline void MsgGetServerInfo::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
}

// optional int32 result = 3;
inline bool MsgGetServerInfo::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgGetServerInfo::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgGetServerInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgGetServerInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MsgGetServerInfo::result() const {
  return result_;
}
inline void MsgGetServerInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ServerInfo server_list = 4;
inline int MsgGetServerInfo::server_list_size() const {
  return server_list_.size();
}
inline void MsgGetServerInfo::clear_server_list() {
  server_list_.Clear();
}
inline const ::ServerInfo& MsgGetServerInfo::server_list(int index) const {
  return server_list_.Get(index);
}
inline ::ServerInfo* MsgGetServerInfo::mutable_server_list(int index) {
  return server_list_.Mutable(index);
}
inline ::ServerInfo* MsgGetServerInfo::add_server_list() {
  return server_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerInfo >&
MsgGetServerInfo::server_list() const {
  return server_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ServerInfo >*
MsgGetServerInfo::mutable_server_list() {
  return &server_list_;
}

// -------------------------------------------------------------------

// MsgUserSelectZone

// optional string account = 1;
inline bool MsgUserSelectZone::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgUserSelectZone::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgUserSelectZone::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgUserSelectZone::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MsgUserSelectZone::account() const {
  return *account_;
}
inline void MsgUserSelectZone::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MsgUserSelectZone::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MsgUserSelectZone::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgUserSelectZone::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* MsgUserSelectZone::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgUserSelectZone::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 login_key = 2;
inline bool MsgUserSelectZone::has_login_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgUserSelectZone::set_has_login_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgUserSelectZone::clear_has_login_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgUserSelectZone::clear_login_key() {
  login_key_ = 0u;
  clear_has_login_key();
}
inline ::google::protobuf::uint32 MsgUserSelectZone::login_key() const {
  return login_key_;
}
inline void MsgUserSelectZone::set_login_key(::google::protobuf::uint32 value) {
  set_has_login_key();
  login_key_ = value;
}

// optional uint32 client_taskid = 3;
inline bool MsgUserSelectZone::has_client_taskid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgUserSelectZone::set_has_client_taskid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgUserSelectZone::clear_has_client_taskid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgUserSelectZone::clear_client_taskid() {
  client_taskid_ = 0u;
  clear_has_client_taskid();
}
inline ::google::protobuf::uint32 MsgUserSelectZone::client_taskid() const {
  return client_taskid_;
}
inline void MsgUserSelectZone::set_client_taskid(::google::protobuf::uint32 value) {
  set_has_client_taskid();
  client_taskid_ = value;
}

// optional uint64 login_server_uid = 4;
inline bool MsgUserSelectZone::has_login_server_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgUserSelectZone::set_has_login_server_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgUserSelectZone::clear_has_login_server_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgUserSelectZone::clear_login_server_uid() {
  login_server_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_login_server_uid();
}
inline ::google::protobuf::uint64 MsgUserSelectZone::login_server_uid() const {
  return login_server_uid_;
}
inline void MsgUserSelectZone::set_login_server_uid(::google::protobuf::uint64 value) {
  set_has_login_server_uid();
  login_server_uid_ = value;
}

// optional int32 result = 5;
inline bool MsgUserSelectZone::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgUserSelectZone::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgUserSelectZone::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgUserSelectZone::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MsgUserSelectZone::result() const {
  return result_;
}
inline void MsgUserSelectZone::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint32 gateway_ip = 6;
inline bool MsgUserSelectZone::has_gateway_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgUserSelectZone::set_has_gateway_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgUserSelectZone::clear_has_gateway_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgUserSelectZone::clear_gateway_ip() {
  gateway_ip_ = 0u;
  clear_has_gateway_ip();
}
inline ::google::protobuf::uint32 MsgUserSelectZone::gateway_ip() const {
  return gateway_ip_;
}
inline void MsgUserSelectZone::set_gateway_ip(::google::protobuf::uint32 value) {
  set_has_gateway_ip();
  gateway_ip_ = value;
}

// optional uint32 gateway_port = 7;
inline bool MsgUserSelectZone::has_gateway_port() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgUserSelectZone::set_has_gateway_port() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgUserSelectZone::clear_has_gateway_port() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgUserSelectZone::clear_gateway_port() {
  gateway_port_ = 0u;
  clear_has_gateway_port();
}
inline ::google::protobuf::uint32 MsgUserSelectZone::gateway_port() const {
  return gateway_port_;
}
inline void MsgUserSelectZone::set_gateway_port(::google::protobuf::uint32 value) {
  set_has_gateway_port();
  gateway_port_ = value;
}

// -------------------------------------------------------------------

// MsgRecordCharToLoginDB

// optional .SvrZoneCharInfo char_info = 1;
inline bool MsgRecordCharToLoginDB::has_char_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRecordCharToLoginDB::set_has_char_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRecordCharToLoginDB::clear_has_char_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRecordCharToLoginDB::clear_char_info() {
  if (char_info_ != NULL) char_info_->::SvrZoneCharInfo::Clear();
  clear_has_char_info();
}
inline const ::SvrZoneCharInfo& MsgRecordCharToLoginDB::char_info() const {
  return char_info_ != NULL ? *char_info_ : *default_instance_->char_info_;
}
inline ::SvrZoneCharInfo* MsgRecordCharToLoginDB::mutable_char_info() {
  set_has_char_info();
  if (char_info_ == NULL) char_info_ = new ::SvrZoneCharInfo;
  return char_info_;
}
inline ::SvrZoneCharInfo* MsgRecordCharToLoginDB::release_char_info() {
  clear_has_char_info();
  ::SvrZoneCharInfo* temp = char_info_;
  char_info_ = NULL;
  return temp;
}
inline void MsgRecordCharToLoginDB::set_allocated_char_info(::SvrZoneCharInfo* char_info) {
  delete char_info_;
  char_info_ = char_info;
  if (char_info) {
    set_has_char_info();
  } else {
    clear_has_char_info();
  }
}

// -------------------------------------------------------------------

// NotifyUpdateServerInfo

// optional uint64 server_uid = 1;
inline bool NotifyUpdateServerInfo::has_server_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUpdateServerInfo::set_has_server_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUpdateServerInfo::clear_has_server_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUpdateServerInfo::clear_server_uid() {
  server_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_server_uid();
}
inline ::google::protobuf::uint64 NotifyUpdateServerInfo::server_uid() const {
  return server_uid_;
}
inline void NotifyUpdateServerInfo::set_server_uid(::google::protobuf::uint64 value) {
  set_has_server_uid();
  server_uid_ = value;
}

// optional int32 onlinenum = 2;
inline bool NotifyUpdateServerInfo::has_onlinenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyUpdateServerInfo::set_has_onlinenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyUpdateServerInfo::clear_has_onlinenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyUpdateServerInfo::clear_onlinenum() {
  onlinenum_ = 0;
  clear_has_onlinenum();
}
inline ::google::protobuf::int32 NotifyUpdateServerInfo::onlinenum() const {
  return onlinenum_;
}
inline void NotifyUpdateServerInfo::set_onlinenum(::google::protobuf::int32 value) {
  set_has_onlinenum();
  onlinenum_ = value;
}

// optional int32 state = 3;
inline bool NotifyUpdateServerInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyUpdateServerInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyUpdateServerInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyUpdateServerInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 NotifyUpdateServerInfo::state() const {
  return state_;
}
inline void NotifyUpdateServerInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// MsgKickGatewayUser

// optional string account = 1;
inline bool MsgKickGatewayUser::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgKickGatewayUser::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgKickGatewayUser::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgKickGatewayUser::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MsgKickGatewayUser::account() const {
  return *account_;
}
inline void MsgKickGatewayUser::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MsgKickGatewayUser::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MsgKickGatewayUser::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgKickGatewayUser::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* MsgKickGatewayUser::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgKickGatewayUser::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 result = 2;
inline bool MsgKickGatewayUser::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgKickGatewayUser::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgKickGatewayUser::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgKickGatewayUser::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MsgKickGatewayUser::result() const {
  return result_;
}
inline void MsgKickGatewayUser::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MsgUnregZoneUser

// optional string account = 1;
inline bool MsgUnregZoneUser::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgUnregZoneUser::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgUnregZoneUser::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgUnregZoneUser::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MsgUnregZoneUser::account() const {
  return *account_;
}
inline void MsgUnregZoneUser::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MsgUnregZoneUser::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MsgUnregZoneUser::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgUnregZoneUser::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* MsgUnregZoneUser::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgUnregZoneUser::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 result = 2;
inline bool MsgUnregZoneUser::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgUnregZoneUser::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgUnregZoneUser::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgUnregZoneUser::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MsgUnregZoneUser::result() const {
  return result_;
}
inline void MsgUnregZoneUser::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ZoneCmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ZoneCmd::SvrZoneOpCode>() {
  return ::ZoneCmd::SvrZoneOpCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoSvrZone_2eproto__INCLUDED
